{"version":3,"sources":["./src/app/pages/tvs/index-tv/tvs.component.ts","./src/app/pages/tvs/index-tv/tvs.component.html","./src/app/pages/tvs/tvs-routing.module.ts","./src/app/services/shared/shared-api-service.service.ts","./src/app/pages/tvs/index-tv/tv.column.ts","./src/app/services/app-tv/app-tv.services.ts","./node_modules/file-saver/dist/FileSaver.min.js","./src/app/services/categories/categories.services.ts","./src/app/services/filter-to-query/filter-to-query.service.ts","./src/app/pages/tvs/tvs.module.ts","./src/app/pages/tvs/edit-tv/edit-tv.component.ts","./src/app/pages/tvs/edit-tv/edit-tv.component.html"],"names":[],"mappings":"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","file":"pages-tvs-tvs-module.js","sourcesContent":["import {DatePipe} from '@angular/common';\nimport {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NbDialogService, NbToastrService} from '@nebular/theme';\nimport {GridDataResult} from '@progress/kendo-angular-grid';\nimport {AppTvServices} from '../../../services/app-tv/app-tv.services';\nimport {AppsServices} from '../../../services/apps/apps.services';\nimport {CategoriseServices} from '../../../services/categories/categories.services';\nimport {FilterToQueryService} from '../../../services/filter-to-query/filter-to-query.service';\nimport {StoresServices} from '../../../services/stores/stores.services';\nimport {tvColumn} from './tv.column';\nimport {saveAs} from 'file-saver';\nimport {SharedApiServiceService} from '../../../services/shared/shared-api-service.service';\n\n@Component({\n    selector: 'app-tvs',\n    templateUrl: 'tvs.component.html',\n    styleUrls: ['tvs.component.scss'],\n})\nexport class TvsComponent implements OnInit {\n    @ViewChild('dialog') dialog: any;\n    public columnGrid: any[] = tvColumn;\n    public autoCompleteData: any = [\n        {\n            name: 'category',\n            list: []\n        },\n        {\n            name: 'store',\n            list: []\n        }\n    ];\n\n    public dataItem: GridDataResult = {\n        data: [],\n        total: 0\n    };\n    public loading: boolean = false;\n    public currentDeleteApp: any;\n\n    apps = [];\n    types = [];\n    appOptions = [];\n    appTvTypes = [];\n    lastMeta: string;\n\n    constructor(\n        private appTvServices: AppTvServices,\n        private appsServices: AppsServices,\n        private dialogService: NbDialogService,\n        private toaster: NbToastrService,\n        private router: Router,\n        private convertFilter: FilterToQueryService,\n        private categoryService: CategoriseServices,\n        private storesServices: StoresServices,\n        private _datePipe: DatePipe,\n        private sharedService: SharedApiServiceService\n    ) {\n    }\n\n    ngOnInit() {\n        this.getAppTvs();\n        this.getAppsForSelection();\n        this.getAppTvTypes();\n        this.getAppTvLocation();\n    }\n\n    getAppTvs(meta?: any) {\n        this.loading = true;\n        this.lastMeta = meta;\n        this.appTvServices.getAppTvs(meta).subscribe(\n            res => {\n                this.dataItem.data = res['data'];\n                this.dataItem.total = res['total'];\n            },\n            error => {\n            },\n            () => {\n                this.loading = false;\n            }\n        );\n    }\n\n    getAppsForSelection() {\n        this.appsServices.getAppsForSelection().subscribe(\n            res => {\n                this.columnGrid.filter(ele => ele.field === 'app')[0].filterMenu = res['data'].map(ele => {\n                    let data = {\n                        textField: ele.name,\n                        valueField: ele.id\n                    };\n                    return data;\n                });\n            },\n            error => {\n            },\n            () => {\n            }\n        );\n    }\n\n    getAppTvTypes() {\n        this.appTvServices.getAppTvTypes().subscribe(\n            res => {\n                this.columnGrid.filter(ele => ele.field === 'type')[0].filterMenu = res['data'].map(ele => {\n                    let data = {\n                        textField: ele.name,\n                        valueField: ele.id\n                    };\n                    return data;\n                });\n            },\n            error => {\n            },\n            () => {\n            }\n        );\n    }\n\n    getAppTvLocation() {\n        this.appTvServices.getAppTvLocation().subscribe(\n            res => {\n                this.columnGrid.filter(ele => ele.field === 'location')[0].filterMenu = res['data'].map(ele => {\n                    let data = {\n                        textField: ele,\n                        valueField: ele\n                    };\n                    return data;\n                });\n            },\n            error => {\n            },\n            () => {\n            }\n        );\n    }\n\n    getCategories(meta: string) {\n        this.categoryService.getCategoriesByLevel(\"\",meta).subscribe(\n            res => {\n                this.autoCompleteData.filter(ele => ele.name === 'category')[0].list = res['data'];\n            }, error => {\n            });\n    }\n\n    getStores(meta: string) {\n        this.storesServices.getAllStores(meta).subscribe(\n            res => {\n                this.autoCompleteData.filter(ele => ele.name === 'store')[0].list = res['data'];\n            }, error => {\n            });\n    }\n\n    deleteAppTv(dialogRef: any) {\n        this.appTvServices.deleteAppTv(this.currentDeleteApp.id).subscribe(\n            res => {\n                this.toaster.show(res['msg'], 'Success', {status: 'success'});\n            },\n            error => {\n                this.toaster.show(error.error.message, 'Error', {status: 'danger'});\n                dialogRef.close();\n            },\n            () => {\n                this.getAppTvs();\n                dialogRef.close();\n            }\n        );\n    }\n\n\n    filterChange(event: any) {\n        let newEvent: any = Object.assign({}, event);\n\n        this.getAppTvs(this.convertFilter.convertToQuery(newEvent));\n    }\n\n    autoCompleteFilterChangeCheck(event: any) {\n        const autotype = event.fieldName;\n        if (autotype === 'category') {\n            const meta = 'name=' + event.value;\n            this.getCategories(meta);\n        }\n\n        if (autotype === 'store') {\n            const meta = 'name=' + event.value;\n            this.getStores(meta);\n        }\n    }\n\n    open(dialog: TemplateRef<any>) {\n        this.dialogService.open(dialog);\n    }\n\n    commandActionClick(event: any) {\n        switch (event.action.action) {\n            case 'edit':\n                this.router.navigate(['./sliders/edit-slider/' + event.data.id]);\n                break;\n\n            case 'delete':\n                this.currentDeleteApp = event.data;\n                this.open(this.dialog);\n                break;\n        }\n    }\n\n    export() {\n        this.sharedService.exportUrl = this.lastMeta ? 'app-tv/export/excel?' + this.lastMeta : 'app-tv/export/excel';\n        this.sharedService.exportData(this.sharedService.exportUrl).subscribe(data => {\n            saveAs(data, 'app-tv.xlsx');\n        }),\n            error =>  this.toaster.show('Error downloading the file.', 'Error', {status: 'danger'});\n    }\n}\n","<nb-card>\n    <nb-card-header>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"gappx\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"header-title\">\n                App Sliders\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                <button nbButton class=\"mr-2\" (click)=\"export()\" status=\"danger\" size=\"small\" *ngIf=\"dataItem.data.length > 0\">Export</button>\n                <button nbButton routerLink=\"/sliders/create-slider\" status=\"primary\" size=\"small\">Add New Slider</button>\n            </div>\n        </div>\n    </nb-card-header>\n    <nb-card-body>\n        <app-kendo-custome-grid [GridColumns]=\"columnGrid\" [gridView]=\"dataItem\" (stateChange)=\"filterChange($event)\"\n                                (autoCompleteFilterChange)=\"autoCompleteFilterChangeCheck($event)\"\n                                [autoCompleteData]=\"autoCompleteData\"\n                                [loading]=\"loading\" (commandActionClick)=\"commandActionClick($event)\"\n                                [sortable]=\"false\">\n        </app-kendo-custome-grid>\n    </nb-card-body>\n</nb-card>\n\n<ng-template #dialog let-data let-ref=\"dialogRef\">\n    <nb-card class=\"dialog-card\">\n        <nb-card-header>\n            Delete Confirm\n        </nb-card-header>\n        <nb-card-body>\n            <div>Are you sure to delete app <strong>{{currentDeleteApp?.id}}</strong> ?</div>\n        </nb-card-body>\n        <nb-card-footer>\n            <button nbButton (click)=\"ref.close()\">Cancel</button>\n            <button nbButton status=\"danger\" (click)=\"deleteAppTv(ref)\"\n                    style=\"float: right;\">Yes\n            </button>\n        </nb-card-footer>\n    </nb-card>\n</ng-template>\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SidebarComponent } from '../../shared/sidebar/sidebar.component';\nimport { EditTvComponent } from './edit-tv/edit-tv.component';\nimport { TvsComponent } from './index-tv/tvs.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: SidebarComponent,\n  children: [\n    { path: '', component: TvsComponent },\n    { path: 'create-slider', component: EditTvComponent },\n    { path: 'edit-slider/:id', component: EditTvComponent },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TvsRoutingModule {\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpRequest} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedApiServiceService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    exportUrl: any;\n\n    getCities(meta?: any) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/cities/for-selection?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/cities/for-selection';\n        return this.http.get<any>(url);\n    }\n\n    exportData(targetUrl) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/' + targetUrl;\n        const opts: any = {\n            headers: new HttpHeaders({\n                'Accept': 'text/html, application/xhtml+xml, */*',\n                'Content-Type': 'text/plain; charset=utf-8'\n            }),\n            responseType: 'blob'\n        };\n        return this.http.get<string>(url, opts);\n    }\n}\n","import { KendoCustomeGrideModel } from \"../../../shared/kendo-custome-grid/model/kendoCustomeGrid.model\";\n\nexport const tvColumn: KendoCustomeGrideModel[] = [\n    {\n        dataType: 'text',\n        id: 'id',\n        name: 'ID',\n        field: 'id',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'location',\n        name: 'Location',\n        field: 'location',\n        filterType: 'menu',\n        filterMenu: [],\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'category',\n        name: 'Category',\n        field: 'category',\n        fieldAttrName: 'name_en',\n        filterType: 'autoComplete',\n        autoTextField: 'name_en',\n        autoValueField: 'id',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'app',\n        name: 'App',\n        field: 'app',\n        fieldAttrName: 'app_en',\n        filterType: 'menu',\n        filterMenu: [],\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'type',\n        name: 'Type',\n        field: 'type',\n        fieldAttrName: 'type_en',\n        filterType: 'menu',\n        filterMenu: [],\n        fieldSearch: 'type_id',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'date',\n        id: 'expiry_date',\n        name: 'Expiry date',\n        field: 'expiry_date',\n        filterType: 'menu',\n        filterMenu: [\n            { textField: 'Valid', valueField: 'valid'},\n            { textField: 'Expired', valueField: 'expired'},\n        ],\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'command',\n        name: 'Action',\n        field: 'command',\n        filterType: 'none',\n        hidden: false,\n        filterOperator: 'EQUAL',\n        command: [\n            {\n                action: 'edit',\n                color: 'primary',\n                id: 'edit-action',\n                hidden: false,\n                toolTip: 'Edit',\n                icon: 'edit',\n                buttonType: 'icon',\n                disabled: () => false,\n            },\n            {\n                action: 'delete',\n                color: 'warn',\n                id: 'delete-action',\n                hidden: false,\n                toolTip: 'Delete',\n                icon: 'delete',\n                buttonType: 'icon',\n                disabled: () => false,\n            }\n        ]\n    },\n]","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppTvServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getAppTvs(meta?: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/app-tv' + (meta ? ('?' + meta) : '');\n    return this.http.get(url);\n  }\n\n  public getAppTv(id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/app-tv/' + id;\n    return this.http.get(url);\n  }\n\n  public getAppTvTypes() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/app-tv/select/types';\n    return this.http.get(url);\n  }\n\n  public getAppTvLocation() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/app-tv/select/locations';\n    return this.http.get(url);\n  }\n\n  public createAppTv(newAppTv) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/app-tv';\n    return this.http.post(url, newAppTv);\n  }\n\n  public updateAppTv(appTv) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/app-tv/update';\n    return this.http.post(url, appTv);\n  }\n  public deleteAppTv(id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/app-tv/' + id;\n    return this.http.delete(url);\n  }\n\n\n}\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApiModel} from '../../shared/model/api.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoriseServices {\n\n    constructor(private http: HttpClient) {\n    }\n\n    public getCategoriseForAdmin(meta?: string) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/categories/get-categories-for-admin?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/categories/get-categories-for-admin';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getCategorise(meta?: string) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/categories?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/categories';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getCategoriesByLevel( level : string, meta?:string ) {\n        var url = environment.MAIN_SYSTEM + 'api/dashboard/categories?level='+level;\n        url = meta ? url+'&' + meta : url;\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getCategoriesAllWithTree() {\n        const url =  environment.MAIN_SYSTEM + 'api/dashboard/categories/get-all-main-sub-child';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getParentCategorise(meta?: string) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/categories/parent-and-sub?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/categories/parent-and-sub';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public CreateCategory(newCategory) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories';\n        return this.http.post(url, newCategory);\n    }\n\n    public getCategory(categoryId) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/' + categoryId;\n        return this.http.get(url);\n    }\n\n    public editCategory(category) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/update';\n        return this.http.post(url, category);\n    }\n\n    public deleteCategory(categoryId) {\n        const options = {\n            headers: new HttpHeaders({}),\n            body: {\n                id: categoryId\n            }\n        };\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories';\n        return this.http.delete(url, options);\n    }\n\n\n    public selectedCategories(filter) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/list/' + filter;\n        return this.http.get(url);\n    }\n\n    public getCategoriesForSelection() {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/for-selection';\n        return this.http.get(url);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CompositeFilterDescriptor, FilterDescriptor, State} from '@progress/kendo-data-query';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterToQueryService {\n    queryString: string = '';\n\n    constructor() {\n    }\n\n    convertToQuery(state: State): string {\n        let fieldName = '';\n        let filter: Array<FilterDescriptor | CompositeFilterDescriptor> = state.filter?.filters ? state.filter.filters : [];\n        this.queryString = '';\n        filter.forEach((item: FilterDescriptor, i) => {\n            // if (item.field === 'name_en' || item.field === 'name_ar') {\n            //     fieldName = 'name';\n            // } else {\n            fieldName = item.field.toString();\n            // }\n            this.queryString = this.queryString + ((item.value || item.value === false) ? (fieldName + '=' + item.value + '&') : '');\n        });\n        this.queryString = this.queryString + 'limit=' + state.take + '&offset=' + state.skip;\n        return this.queryString;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NbAutocompleteModule, NbDatepickerModule, NbFormFieldModule, NbMenuModule, NbSelectModule } from '@nebular/theme';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { TvsRoutingModule } from './tvs-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { EditTvComponent } from './edit-tv/edit-tv.component';\nimport { TvsComponent } from './index-tv/tvs.component';\nimport { KendoCustomeGridModule } from '../../shared/kendo-custome-grid/kendoCustomeGrid.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    TvsRoutingModule,\n    ThemeModule,\n    CommonModule,\n    SharedModule,\n\n    NbMenuModule,\n    NbSelectModule,\n    NbDatepickerModule.forRoot(),\n    NbDatepickerModule,\n    NbAutocompleteModule,\n    NbFormFieldModule,\n    KendoCustomeGridModule,\n  ],\n  declarations: [\n    TvsComponent,\n    EditTvComponent\n  ],\n})\nexport class TvsModule {\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AdminsServices } from '../../../services/admins/admins.services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppTvServices } from '../../../services/app-tv/app-tv.services';\nimport { ProductsServices } from '../../../services/products/products.services';\nimport { StoresServices } from '../../../services/stores/stores.services';\nimport { AppsServices } from '../../../services/apps/apps.services';\nimport { CategoriseServices } from '../../../services/categories/categories.services';\nimport { NbToastrService } from '@nebular/theme';\nimport { FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { SellersServices } from '../../../services/sellers/sellers.services';\nimport { isObject } from 'rxjs/internal/util/isObject';\n\n@Component({\n    selector: 'app-edit-tv',\n    templateUrl: 'edit-tv.component.html',\n    styleUrls: ['edit-tv.component.scss'],\n})\nexport class EditTvComponent implements OnInit {\n    @ViewChild('autoComplete') autoComplete: ElementRef;\n    public pageTitle: string;\n    public tvFormGroup: FormGroup = new FormGroup({});\n    public tvTypeControl: FormControl = new FormControl(null, [Validators.required,]);\n    public TvImage: string;\n    public web_image: string;\n    public storList: any[] = [];\n    public itemTypePlaceholder: string;\n    public itemTypeList: any[] = [];\n    public minDate = new Date();\n\n    appTvTypes = [];\n    selectOptions = [];\n    locationOptions: any[] = [];\n    appOptions = [];\n    categoriesOptions = [];\n    isLoading: boolean = false;\n    formsubmit: boolean = false;\n    selectedImage: File;\n    selectedImageWeb: File;\n    selectText = '';\n    selectedItems = [];\n\n\n    private appTvId: any;\n\n    constructor(\n        private activeRouter: ActivatedRoute,\n        private appTvService: AppTvServices,\n        private toaster: NbToastrService,\n        private productsServices: ProductsServices,\n        private storesServices: StoresServices,\n        private sellersServices: SellersServices,\n        private appsServices: AppsServices,\n        private categoriseServices: CategoriseServices,\n        private route: Router,\n        private _datePipe: DatePipe,\n    ) {\n        this.getAppTvTypes();\n        this.getAppsForSelection();\n        this.getCategoriesForSelection();\n        this.tvFormGroup = new FormGroup({\n            title_en: new FormControl(null, [Validators.required,]),\n            title_ar: new FormControl(null, [Validators.required,]),\n            description_en: new FormControl(null, [Validators.required,]),\n            description_ar: new FormControl(null, [Validators.required,]),\n            mobile_image: new FormControl(),//null, [Validators.required,]),\n            web_image: new FormControl(),//null, [Validators.required,]),\n            app_id: new FormControl(null, [Validators.required,]),\n            item_type: new FormControl(null, [Validators.required]),\n            expiry_date: new FormControl(null, [Validators.required]),\n            item_id: new FormControl(null),\n            items_ids: new FormControl(),\n            app: new FormControl(),\n            category: new FormControl(),\n            category_id: new FormControl(),\n            created_at: new FormControl(),\n            id: new FormControl(),\n            // cat_id: new FormControl(),\n            type: new FormControl(),\n            updated_at: new FormControl(),\n            location: new FormControl(),\n            category_ids: new FormControl(null, []),\n            item: new FormControl(),\n        });\n    }\n\n    ngOnInit() {\n        this.tvFormGroup.get('category_ids').valueChanges.subscribe(\n            res => {\n                if (this.tvFormGroup.get('item_type').value) {\n                    this.changeitemTypePlaceholder(this.tvFormGroup.get('item_type').value);\n                }\n            }\n        );\n        this.tvFormGroup.get('item_type').valueChanges.subscribe(\n            res => {\n                // if(res !=this.tvFormGroup.get('item_type').value){\n                    this.changeitemTypePlaceholder(res);\n                // }\n        //         // this.tvFormGroup.get('items_ids').reset([]);\n                this.tvFormGroup.get('item_id').reset('');\n        //         // this.itemTypeList = [];\n        //         // this.changeitemTypePlaceholder(res);\n                this.tvFormGroup.get('items_ids').setValue([]);\n            }\n        );\n        \n        this.tvFormGroup.get('item_id').valueChanges.pipe(distinctUntilChanged(), debounceTime(800)).subscribe(res => {\n            this.changeitemTypePlaceholder(this.tvFormGroup.get('item_type').value, res);\n        })\n       \n\n        this.activeRouter.params.subscribe(res => {\n            this.appTvId = res.id;\n            if (this.appTvId) {\n                this.pageTitle = 'Edit';\n                this.getAppId();\n            } else {\n                this.pageTitle = 'Create';\n            }\n        });\n        \n    }\n\n    changeitemTypePlaceholder(res, search_name = \"\") {\n        switch (res) {\n            case 1:\n                this.itemTypePlaceholder = 'Product';\n                this.getProductsForSelection(search_name);\n                break;\n            case 2:\n                this.itemTypePlaceholder = 'Products';\n                this.getProductsForSelection();\n                break;\n            case 3:\n                this.itemTypePlaceholder = 'Category';\n                this.getCategoriesForSelectionItems();\n                break;\n            case 4:\n                this.itemTypePlaceholder = 'Store';\n                this.getStoresForSelection(search_name);\n                break;\n            case 5:\n                this.itemTypePlaceholder = 'Seller';\n                this.getSellersForSelection(search_name);\n                break;\n            default:\n                break;\n        }\n    }\n\n    getAppId() {\n        this.appTvService.getAppTv(this.appTvId).subscribe(\n            res => {\n                res['data'].expiry_date = new Date(res['data'].expiry_date);\n                // this.changeitemTypePlaceholder(res['data'].item_type);\n                this.tvFormGroup.get('title_en').setValue(res['data'].title_en);\n                this.tvFormGroup.get('title_ar').setValue(res['data'].title_ar);\n                this.tvFormGroup.get('description_en').setValue(res['data'].description_en);\n                this.tvFormGroup.get('description_ar').setValue(res['data'].description_ar);\n                this.tvFormGroup.get('category_id').setValue(res['data'].category_id);\n                this.tvFormGroup.get('expiry_date').setValue(res['data'].expiry_date);\n                this.tvFormGroup.get('id').setValue(res['data'].id);\n                this.tvFormGroup.get('app_id').setValue(res['data'].app_id);\n                // this.tvFormGroup.patchValue(res['data']);\n                this.tvFormGroup.get('item_type').setValue(res['data'].item_type);\n                if(res['data'].items_ids != \"null\"){\n                    this.tvFormGroup.get('items_ids').setValue(res['data'].items_ids);\n                }\n                if(res['data'].item){\n                    this.tvFormGroup.get('item_id').setValue(res['data'].item);\n                }\n                this.TvImage = res['data'].mobile_image;\n                this.web_image = res['data'].web_image;\n                \n                // if(res['data'].item_id)\n                // this.tvFormGroup.get('item_id').setValue({ name: \"Prof. Dennis Lynch PhD\" });\n                // this.tvFormGroup.get('item_id').setValue(res['data'].item_id);\n                // if (res['data'].item_type == 2 && res['data'].items_ids) {\n                    // this.tvFormGroup.get('item_id').setValue(JSON.parse(res['data'].items_ids).join(\",\"));\n                    // this.tvFormGroup.get('item_id').setValue(JSON.parse(res['data'].items_ids).join(\",\"));\n                // }\n                switch (res['data'].location) {\n                    case 'home':\n                        this.tvTypeControl.setValue('0');\n                        break;\n                    case 'category':\n                        this.tvTypeControl.setValue('1');\n                        break;\n                }\n                // this.tvFormGroup.get('items_ids').setValue((res['data'].items_ids));\n\n            },\n            err => {\n                this.toaster.show(err.error.message, 'Error', { status: 'danger' });\n            },\n            () => {\n                // this.tvFormGroup.get('item_id').setValue(this.tvFormGroup.get('item').value);\n                // this.autoComplete.nativeElement.blur();\n            }\n        );\n    }\n\n    getAppTvLocation() {\n        this.appTvService.getAppTvLocation().subscribe(\n            res => {\n                this.locationOptions = res['data'];\n            },\n            error => {\n            },\n            () => {\n            }\n        );\n    }\n\n    getAppTvTypes() {\n        this.appTvService.getAppTvTypes().subscribe(\n            res => {\n                this.appTvTypes = res['data'];\n            }\n        );\n    }\n\n    getCategoriesForSelection(res = \"\") {\n        let query = 'name=' + res;\n        this.categoriseServices.getCategoriesByLevel(\"\", query).subscribe(res => {\n            // this.itemTypeList = res['data'];\n            this.categoriesOptions = res['data'];\n        });\n    }\n\n    getCategoriesForSelectionItems(res = \"\") {\n        let query = 'name=' + res;\n        this.categoriseServices.getCategoriesByLevel(\"\", query).subscribe(res => {\n            // this.itemTypeList = res['data'];\n            this.itemTypeList = res['data'];\n        });\n    }\n\n    createAppTv() {\n        this.formsubmit = true;\n        if (this.tvFormGroup.valid) {\n\n            const uploadData = new FormData();\n            const formGroupValue: any = this.tvFormGroup.value;\n\n            formGroupValue.id ? uploadData.append('id', formGroupValue.id) : false;\n            uploadData.append('item_type', formGroupValue.item_type);\n            uploadData.append('expiry_date', this._datePipe.transform(formGroupValue.expiry_date, 'yyyy-MM-dd'));\n            uploadData.append('app_id', formGroupValue.app_id);\n            uploadData.append('description_ar', formGroupValue.description_ar);\n            uploadData.append('description_en', formGroupValue.description_en);\n            uploadData.append('title_en', formGroupValue.title_en);\n            uploadData.append('title_ar', formGroupValue.title_ar);\n            if (formGroupValue.item_id)\n                uploadData.append('item_id', formGroupValue.item_id.id);\n            if (formGroupValue.item_type == 2) {\n                formGroupValue.items_ids.forEach(element => {\n                    uploadData.append('items_ids[]', element);\n                });\n            }\n            // else {\n            // uploadData.append('item_id', formGroupValue.item_id);\n            // }\n            // uploadData.append('web_image', formGroupValue.web_image);\n            // uploadData.append('mobile_image', formGroupValue.mobile_image);\n            // if (this.tvTypeControl.value !== 0) {\n            //     uploadData.append('item_id', formGroupValue.item_id.id);\n            // }\n            if (formGroupValue.category_id) {\n                uploadData.append('category_id', formGroupValue.category_id);\n            }\n            // if (formGroupValue.cat_id) {\n            //     uploadData.append('cat_id', formGroupValue.cat_id?.id);\n            // }\n\n            if (this.selectedImage != undefined) {\n                uploadData.append('mobile_image', this.selectedImage, this.selectedImage.name);\n            }\n\n            if (this.selectedImageWeb != undefined) {\n                uploadData.append('web_image', this.selectedImageWeb, this.selectedImageWeb.name);\n            }\n            this.appTvService[this.appTvId ? 'updateAppTv' : 'createAppTv'](uploadData).subscribe(\n                res => {\n                    this.toaster.show(res['msg'], 'Success', { status: 'success' });\n                    this.route.navigateByUrl('/sliders');\n                },\n                err => {\n                    this.toaster.show(err.error.message, 'Error', { status: 'danger' });\n                },\n                () => {\n                }\n            );\n\n        }\n    }\n\n    getProductsForSelection(search_name = \"\") {\n        var meta = \"\";\n        if (this.tvFormGroup.get('category_ids').value) {\n            meta = \"category=\" + this.tvFormGroup.get('category_ids').value.join(\",\");\n        }\n        if (search_name) {\n            if (meta)\n                meta += \"&\";\n            meta += \"name=\" + search_name;\n        }\n        this.productsServices.getProductsForSelection(meta).subscribe(\n            res => {\n                this.itemTypeList = res['data'];\n                // this.selectedItems = [1,2];\n                // this.tvFormGroup.get('items_ids').setValue(this.selectedItems);\n                // this.tvFormGroup.get('items_ids').setValue([1,2,3,5]);\n            },\n            error => {\n            },\n            () => {\n            }\n        );\n    }\n\n    getStoresForSelection(search_name = \"\") {\n        var meta = \"\";\n        if (this.tvFormGroup.get('category_ids').value) {\n            meta = \"category=\" + this.tvFormGroup.get('category_ids').value.join(\",\");\n        }\n        if (search_name) {\n            if (meta)\n                meta += \"&\";\n            meta += \"name=\" + search_name;\n        }\n        this.storesServices.getStoresForSelection(meta).subscribe(\n            res => {\n                this.itemTypeList = res['data'];\n            });\n    }\n\n    getSellersForSelection(search_name = \"\") {\n        var meta = \"\";\n        if (this.tvFormGroup.get('category_ids').value) {\n            meta = \"category=\" + this.tvFormGroup.get('category_ids').value.join(\",\");\n        }\n        if (search_name) {\n            if (meta)\n                meta += \"&\";\n            meta += \"name=\" + search_name;\n        }\n        this.sellersServices.getForSelection(meta).subscribe(\n            res => {\n                this.itemTypeList = res['data'];\n            });\n    }\n\n    getAppsForSelection() {\n        this.appsServices.getAppsForSelection().subscribe(\n            res => {\n                this.appOptions = res['data'];\n            });\n    }\n\n    onAppTvImageChange(event: any) {\n        this.selectedImage = event;\n    }\n\n    onAppTvImageWebChange(event: any) {\n        this.selectedImageWeb = event;\n    }\n\n    viewHandle(value: any) {\n        return (value.name_en ? value.name_en : (value.name ? value.name : value));\n    }\n\n    viewHandleCategory(value: any) {\n\n        return (value.name_en ? value.name_en : value);\n    }\n\n    backToTv() {\n        this.route.navigate(['sliders'])\n    }\n\n    get bf() {\n        return this.tvFormGroup.controls;\n    }\n}\n","<nb-card>\n    <nb-card-header>{{pageTitle}} Tv</nb-card-header>\n    <nb-card-body>\n\n        <div fxLayout=\"row wrap\" fxLayout.xs=\"column-reverse\" fxLayoutAlign=\"start start\"\n            fxLayoutAlign.xs=\"start center\" fxLayoutGap=\"gappx\" class=\"form-container\">\n\n            <div class=\"location-type\" [fxFlex]=\"100/1\">\n                <nb-select placeholder=\"Select Location\" [formControl]=\"tvTypeControl\" [fxFlex]=\"50\">\n                    <nb-option value=\"0\">Home</nb-option>\n                    <nb-option value=\"1\">Category Page</nb-option>\n                </nb-select>\n            </div>\n\n\n            <form [formGroup]=\"tvFormGroup\" [fxFlex]=\"100\" [fxFlex.xs]=\"100\">\n                <ng-container>\n                    <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" [class.hidden]=\"!tvTypeControl.value\"\n                        fxLayoutGap=\"gappx\" class=\"first-row\">\n\n\n                        <div class=\"form-control-container\" [ngClass.xs]=\"'form-control-container-xs'\" [fxFlex]=\"100/1\n                        \n                        \" [fxFlex.xs]=\"100\" *ngIf=\"tvTypeControl.value == 1\"\n                            [ngClass]=\"tvTypeControl.value == 1 ? '':'display-none'\">\n                            <label for=\"category_id\">Category</label>\n                            <nb-select id=\"category_id\" placeholder=\"Category\" formControlName=\"category_id\"\n                                [fxFlex.xs]=\"100\" fullWidth>\n                                <nb-option *ngFor=\"let category of categoriesOptions\" [value]=\"category.id\">\n                                    {{category.name_en}}\n                                </nb-option>\n                            </nb-select>\n                        </div>\n                        <div class=\"form-control-container\" [fxFlex]=\"100/2\">\n                            <nb-form-field class=\"field-with-validation\">\n                                <label for=\"title_en\">Title En *</label>\n                                <input nbInput type=\"text\" fullWidth formControlName=\"title_en\" id=\"title_en\">\n                                <small *ngIf=\"bf.title_en.touched && bf.title_en.errors?.required\">Title Name field is\n                                    required</small>\n                            </nb-form-field>\n                        </div>\n\n                        <div class=\"form-control-container\" [fxFlex]=\"100/2\">\n                            <nb-form-field class=\"field-with-validation\">\n                                <label for=\"title_ar\">Title Ar *</label>\n                                <input nbInput type=\"text\" fullWidth formControlName=\"title_ar\" id=\"title_ar\">\n                                <small *ngIf=\"bf.title_ar.touched && bf.title_en.errors?.required\">Title Name field is\n                                    required</small>\n                            </nb-form-field>\n                        </div>\n\n                        <div class=\"form-control-container\" [fxFlex]=\"100/2\">\n                            <nb-form-field>\n                                <label for=\"description_en\">Description En</label>\n                                <textarea nbInput id=\"description_en\" fullWidth\n                                    formControlName=\"description_en\"></textarea>\n                            </nb-form-field>\n                        </div>\n\n                        <div class=\"form-control-container\" [fxFlex]=\"100/2\">\n                            <nb-form-field>\n                                <label for=\"description_ar\">Description Ar</label>\n                                <textarea nbInput id=\"description_ar\" fullWidth\n                                    formControlName=\"description_ar\"></textarea>\n                            </nb-form-field>\n                        </div>\n\n\n\n                        <div class=\"form-control-container\" [ngClass.xs]=\"'form-control-container-xs'\" [fxFlex]=\"100/2\"\n                            [fxFlex.xs]=\"100\">\n                            <label for=\"select-app\">App</label>\n                            <nb-select id=\"select-app\" placeholder=\"Select App\" formControlName=\"app_id\"\n                                [fxFlex.xs]=\"100\" fullWidth>\n                                <nb-option *ngFor=\"let app of appOptions\" [value]=\"app.id\">{{app.name}}</nb-option>\n                            </nb-select>\n                        </div>\n\n                        <div class=\"form-control-container\" [ngClass.xs]=\"'form-control-container-xs'\" [fxFlex]=\"100/2\"\n                            [fxFlex.xs]=\"100\">\n                            <nb-form-field>\n                                <label for=\"expiry_date\">Expiration Date</label>\n                                <input id=\"expiry_date\" nbInput [nbDatepicker]=\"datepicker\"\n                                    placeholder=\"Select Expiration Date\" formControlName=\"expiry_date\">\n                                <nb-datepicker #datepicker [min]=\"minDate\"></nb-datepicker>\n                            </nb-form-field>\n\n                        </div>\n\n                        <div class=\"form-control-container\" [ngClass.xs]=\"'form-control-container-xs'\" [fxFlex]=\"100/2\">\n                            <label for=\"select-type\">Type</label>\n                            <nb-select id=\"select-type\" placeholder=\"Select Type\" formControlName=\"item_type\" fullWidth>\n                                <nb-option *ngFor=\"let type of appTvTypes\" [value]=\"type.id\">{{type.name}}</nb-option>\n                            </nb-select>\n                            <small *ngIf=\"bf.item_type.touched && bf.item_type.errors?.required\">Type field is\n                                required</small>\n                        </div>\n\n                        <div [ngClass]=\"([1,2,4,5].includes(tvFormGroup.get('item_type').value)) ? '':'hidden'\"\n                            class=\"form-control-container\" [ngClass.xs]=\"'form-control-container-xs'\" [fxFlex]=\"100/2\"\n                            [fxFlex.xs]=\"100\">\n                            <label for=\"category_ids\">Filter By Categories</label>\n                            <nb-select multiple id=\"category_ids\" placeholder=\"Select Categories\"\n                                formControlName=\"category_ids\" [fxFlex.xs]=\"100\" fullWidth>\n                                <nb-option *ngFor=\"let category of categoriesOptions\" [value]=\"category.id\">\n                                    {{category.name_en}}\n                                </nb-option>\n                            </nb-select>\n                        </div>\n\n                        <div [ngClass]=\"([1,3,4,5].includes(tvFormGroup.get('item_type').value)) ? '':'hidden'\"\n                            class=\"form-control-container\" [ngClass.xs]=\"'form-control-container-xs'\" [fxFlex]=\"100/2\">\n                            <nb-form-field>\n                                <label for=\"item_id\">{{ itemTypePlaceholder }}</label>\n                                <input autocomplete=\"off\" type=\"text\" #autoComplete nbInput\n                                    placeholder=\"Search for {{ itemTypePlaceholder }}\" [nbAutocomplete]=\"auto\" fullWidth\n                                    formControlName=\"item_id\" id=\"item_id\">\n                                <nb-autocomplete #auto [handleDisplayFn]=\"viewHandle\">\n                                    <nb-option *ngFor=\"let item of itemTypeList\" [value]=\"item\">\n                                        {{ item.name?item.name:(item.name_en?item.name_en:'') }}\n                                    </nb-option>\n                                </nb-autocomplete>\n                            </nb-form-field>\n                            <small *ngIf=\"bf.item_id.touched && bf.item_id.errors?.required\">{{ itemTypePlaceholder }}\n                                Id field is\n                                required</small>\n                        </div>\n\n                        <div \n                        [ngClass]=\"([2].includes(tvFormGroup.get('item_type').value)) ? '':'hidden'\"\n                        class=\"form-control-container\" [ngClass.xs]=\"'form-control-container-xs'\" [fxFlex]=\"100/2\"\n                            >\n                            <nb-form-field>\n                                <label for=\"items_ids\">{{ itemTypePlaceholder }}</label>\n                                <nb-select\n                                multiple \n                                id=\"items_ids\" \n                                placeholder=\"Select {{ itemTypePlaceholder }}\"\n                                    formControlName=\"items_ids\" [fxFlex.xs]=\"100\" fullWidth>\n                                    <nb-option *ngFor=\"let item of itemTypeList\" [value]=\"item.id\">{{item.name}}\n                                    </nb-option>\n                                </nb-select>\n                            </nb-form-field>\n                            <small *ngIf=\"bf.items_ids.touched && bf.items_ids.errors?.required\">{{ itemTypePlaceholder\n                                }}\n                                Id field is\n                                required</small>\n                        </div>\n\n                    </div>\n\n                </ng-container>\n\n            </form>\n\n            <div fxLayout=\"column\" fxLayoutAlign=\"space-around center\" class=\"image-uploader\"\n                [ngClass.xs]=\"'image-uploader-xs'\" [fxFlex]=\"100/2\" [fxFlex.xs]=\"100\">\n                <label for=\"title_en\">Image Mobile *</label>\n                <upload-image (fileSelected)=\"onAppTvImageChange($event)\" [fxFlex]=\"100\" [image]=\"TvImage\">\n                </upload-image>\n            </div>\n\n            <div fxLayout=\"column\" fxLayoutAlign=\"space-around center\" class=\"image-uploader\"\n                [ngClass.xs]=\"'image-uploader-xs'\" [fxFlex]=\"100/2\" [fxFlex.xs]=\"100\">\n                <label for=\"title_en\">Image Web *</label>\n                <upload-image (fileSelected)=\"onAppTvImageWebChange($event)\" [fxFlex]=\"100\" [image]=\"web_image\">\n                </upload-image>\n            </div>\n\n        </div>\n\n    </nb-card-body>\n\n    <nb-card-footer>\n        <button nbButton status=\"danger\" (click)=\"backToTv()\">Cancel</button>\n        <button nbButton status=\"primary\" (click)=\"createAppTv()\" [disabled]=\"!tvFormGroup.valid\"\n            style=\"float: right;\">Save</button>\n    </nb-card-footer>\n</nb-card>"],"sourceRoot":"webpack:///"}