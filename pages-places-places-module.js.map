{"version":3,"sources":["./src/app/pages/places/places-grid/places-columns/regions.column.ts","./src/app/pages/places/places-dialog/places-forms/cities.form.ts","./src/app/services/locations/location.service.ts","./src/app/pages/places/places-dialog/places-dialog.component.ts","./src/app/pages/places/places-dialog/places-dialog.component.html","./src/app/pages/places/places-grid/places-grid.component.ts","./src/app/pages/places/places-grid/places-grid.component.html","./src/app/pages/places/places-routing.module.ts","./src/app/pages/places/places-dialog/places-forms/regions.form.ts","./src/app/services/filter-to-query/filter-to-query.service.ts","./src/app/pages/places/places-dialog/places-forms/states.form.ts","./src/app/pages/places/places-grid/places-columns/countries.column.ts","./src/app/pages/places/places-index/places-index.component.ts","./src/app/pages/places/places-index/places-index.component.html","./src/app/pages/places/places-grid/places-columns/states.column.ts","./src/app/pages/places/places-dialog/places-forms/countries.form.ts","./src/app/pages/places/places-grid/places-columns/cities.column.ts","./src/app/pages/places/places.module.ts"],"names":[],"mappings":"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","file":"pages-places-places-module.js","sourcesContent":["import { KendoCustomeGrideModel } from \"../../../../shared/kendo-custome-grid/model/kendoCustomeGrid.model\";\n\nexport const regionsColumn: KendoCustomeGrideModel[] = [\n    {\n        dataType: 'text',\n        id: 'region_id',\n        name: 'ID',\n        field: 'id',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'region_name_ar',\n        name: 'Name Ar',\n        field: 'name_ar',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'region_name_en',\n        name: 'Name En',\n        field: 'name_en',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'region_activation',\n        name: 'Activation',\n        field: 'activation',\n        filterType: 'boolean',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'region_country_id',\n        name: 'Country',\n        field: 'country_name_en',\n        filterType: 'autoComplete',\n        fieldSearch: 'country',\n        autoTextField: 'name_en',\n        autoValueField: 'id',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'countries_action',\n        name: 'Action',\n        field: 'action',\n        filterType: 'none',\n        hidden: false,\n        filterOperator: 'EQUAL',\n        command: [\n            {\n                action: 'edit',\n                color: 'primary',\n                icon: 'edit',\n                hidden: false,\n                id: 'edit_action',\n                toolTip: 'Edit',\n                disabled: () => { return false },\n            },\n            {\n                action: 'delete',\n                color: 'warn',\n                icon: 'delete_outline',\n                hidden: false,\n                id: 'delete_action',\n                toolTip: 'Delete',\n                disabled: () => { return false },\n            }\n        ]\n    },\n]","import { Validators } from \"@angular/forms\";\nimport { FormModel } from \"../../../../shared/model/formsModel\";\n\nexport const citiesForms: FormModel[] = [\n    {\n        id: 'name_ar',\n        formControl: 'name_ar',\n        label: 'Name Ar',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    {\n        id: 'name_en',\n        formControl: 'name_en',\n        label: 'Name En',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    {\n        id: 'state_id',\n        formControl: 'state_id',\n        label: 'State',\n        type: 'auto',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n        ]\n    },\n    {\n        id: 'state',\n        formControl: 'state',\n        label: 'State',\n        type: 'auto',\n        inputType: 'text',\n        validators: [],\n        hide: true\n    },\n    {\n        id: 'activation',\n        formControl: 'activation',\n        label: 'Activation',\n        type: 'checkbox',\n        validators: [\n            Validators.required,\n        ]\n    },\n    {\n        id: 'created_at',\n        formControl: 'created_at',\n        label: 'created_at',\n        type: 'string',\n        hide: true,\n    },\n    {\n        id: 'updated_at',\n        formControl: 'updated_at',\n        label: 'updated_at',\n        type: 'string',\n        hide: true,\n    }\n]","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllCountries(meta: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/countries' + (meta ? (\"?\" + meta) : '');\n    return this.http.get(url);\n  }\n  getAllRegions(meta: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/regions' + (meta ? (\"?\" + meta) : '');\n    return this.http.get(url);\n  }\n  getAllStates(meta: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/states' + (meta ? (\"?\" + meta) : '');\n    return this.http.get(url);\n  }\n  getAllCities(meta: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/cities' + (meta ? (\"?\" + meta) : '');\n    return this.http.get(url);\n  }\n\n  //----------------------------------------------------------------------------------------------\n  //----------------------------------------------------------------------------------------------\n\n  getCountriesById(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/countries/' + id;\n    return this.http.get(url);\n  }\n  getRegionsById(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/regions/' + id;\n    return this.http.get(url);\n  }\n  getStatesById(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/states/' + id;\n    return this.http.get(url);\n  }\n  getCitiesById(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/cities/' + id;\n    return this.http.get(url);\n  }\n\n  //----------------------------------------------------------------------------------------------\n  //----------------------------------------------------------------------------------------------\n\n  addNewCountries(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/countries';\n    return this.http.post(url, data);\n  }\n  addNewRegions(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/regions';\n    return this.http.post(url, data);\n  }\n  addNewStates(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/states';\n    return this.http.post(url, data);\n  }\n  addNewCities(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/cities';\n    return this.http.post(url, data);\n  }\n\n  //----------------------------------------------------------------------------------------------\n  //----------------------------------------------------------------------------------------------\n\n  editCountries(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/countries';\n    return this.http.put(url, data);\n  }\n  editRegions(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/regions';\n    return this.http.put(url, data);\n  }\n  editStates(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/states';\n    return this.http.put(url, data);\n  }\n  editCities(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/cities';\n    return this.http.put(url, data);\n  }\n\n  //----------------------------------------------------------------------------------------------\n  //----------------------------------------------------------------------------------------------\n\n  deleteCountries(id: any) {\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/countries';\n    return this.http.delete(url, options);\n  }\n  deleteRegions(id: any) {\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/regions';\n    return this.http.delete(url, options);\n  }\n  deleteStates(id: any) {\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/states';\n    return this.http.delete(url, options);\n  }\n  deleteCities(id: any) {\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/cities';\n    return this.http.delete(url, options);\n  }\n  //----------------------------------------------------------------------------------------------\n  //----------------------------------------------------------------------------------------------\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\nimport { contriesForms } from './places-forms/countries.form';\nimport { regionsForms } from './places-forms/regions.form';\nimport { statesForms } from './places-forms/states.form';\nimport { citiesForms } from './places-forms/cities.form';\nimport { LocationService } from '../../../services/locations/location.service';\nimport { isObject } from 'rxjs/internal/util/isObject';\n@Component({\n  selector: 'places-dialog',\n  templateUrl: './places-dialog.component.html',\n  styleUrls: ['./places-dialog.component.scss']\n})\nexport class PlacesDialogComponent implements OnInit {\n  @Input() placesType: 'countries' | 'regions' | 'states' | 'cities';\n  @Input() title: string;\n  @Input() data: any;\n  @Input() dialogRef: NbDialogRef<any>;\n  @Output() addPlace: EventEmitter<any> = new EventEmitter();\n  public controlList: any[];\n  public addLocationFormGroup: FormGroup = new FormGroup({});\n  public filteredOptions: any[];\n  public autoLoading: boolean = false;\n  public loading: boolean = false;\n  public dialogType: string = 'Add';\n  private timeout: any;\n  private autoType: string;\n  constructor(\n    private _LocationService: LocationService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    switch (this.placesType) {\n      case 'countries':\n        this.controlList = contriesForms;\n        break;\n\n      case 'regions':\n        this.controlList = regionsForms;\n        break;\n\n      case 'states':\n        this.controlList = statesForms;\n        break;\n\n      case 'cities':\n        this.controlList = citiesForms;\n        break;\n    }\n\n    this.autoType = this.controlList.filter(ele => ele.type === 'auto')[0]?.formControl.split('_')[0];\n\n    this.controlList.forEach(ele => {\n      this.addLocationFormGroup.addControl(ele.formControl, new FormControl(ele.type === 'checkbox' ? false : '', ele.validators));\n    })\n\n    if (this.data.type === 'edit') {\n      this.addLocationFormGroup.addControl('id', new FormControl());\n      this.dialogType = 'Edit';\n      this.getPlaceId(this.data.data.id);\n    }\n  }\n\n  autoOnChange(value: any, type: string) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.autoLoading = true;\n      type = type.split('_')[0];\n      switch (type) {\n        case 'country':\n          type = 'Countries';\n          break;\n\n        case 'region':\n          type = 'Regions';\n          break;\n\n        case 'state':\n          type = 'States';\n          break;\n\n        case 'city':\n          type = 'Cities';\n          break;\n      }\n\n      this._LocationService['getAll' + type]('name=' + value).subscribe(\n        (res: any) => {\n          this.filteredOptions = res.data\n        },\n        (error: any) => {\n          this.autoLoading = false;\n        },\n        () => {\n          this.autoLoading = false;\n        },\n      );\n    }, 800);\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  viewHandle(value: any) {\n    if (isObject(value)) {\n      return value.name_en\n    } else {\n      return value\n    }\n  }\n\n  addPlaceAction() {\n    let value: any = this.addLocationFormGroup.value;\n    if (value[this.autoType + '_id']) {\n      value[this.autoType + '_id'] = value[this.autoType + '_id'].id\n      delete value[this.autoType];\n    }\n\n    this.addPlace.emit(value)\n  }\n\n  getPlaceId(id: any) {\n    this.loading = true;\n    this._LocationService['get' + this.title + 'ById'](id).subscribe(\n      (res: any) => {\n        let newRes: any = res.data;\n        if (newRes[this.autoType + '_id']) {\n          newRes[this.autoType + '_id'] = {\n            id: newRes[this.autoType]?.id,\n            name_en: newRes[this.autoType]?.name_en,\n          }\n        }\n        this.addLocationFormGroup.setValue(newRes);\n      },\n      (error: any) => {\n        this.loading = false;\n      },\n      () => {\n        this.loading = false;\n      },\n    )\n  }\n\n}\n","<nb-card [nbSpinner]=\"loading\">\n    <nb-card-header>\n        {{dialogType}} {{title}}\n    </nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"addLocationFormGroup\" fxLayout=\"row warp\" fxLayoutAlign=\"space-between center\"\n            fxLayoutGap=\"gappx\">\n            <ng-container *ngFor=\"let item of controlList\">\n                <nb-form-field *ngIf=\"['string','auto'].includes(item.type) && (!item.hide)\"\n                    [nbSpinner]=\"(item.type=== 'auto') && autoLoading\">\n                    <label [for]=\"item.id\">{{item.label}}</label>\n\n                    <input nbInput [type]=\"item.inputType\" [formControlName]=\"item.formControl\" [id]=\"item.id\"\n                        *ngIf=\"item.type === 'string'\">\n\n                    <input #autoInput nbInput type=\"text\"\n                        (input)=\"autoOnChange(addLocationFormGroup.value[item.formControl],item.formControl)\"\n                        [nbAutocomplete]=\"auto\" *ngIf=\"item.type === 'auto'\" [formControlName]=\"item.formControl\" />\n\n                    <nb-autocomplete #auto [handleDisplayFn]=\"viewHandle\">\n                        <nb-option *ngFor=\"let option of filteredOptions\" [value]=\"option\">\n                            {{ option.name_en }}\n                        </nb-option>\n                    </nb-autocomplete>\n\n                    <small class=\"error-messaage\"\n                        *ngIf=\"addLocationFormGroup.get(item.formControl)?.hasError('required') && addLocationFormGroup.get(item.formControl).touched\">\n                        {{item.label}} is required\n                    </small>\n\n                    <small class=\"error-messaage\"\n                        *ngIf=\"addLocationFormGroup.get(item.formControl)?.hasError('minlength') && addLocationFormGroup.get(item.formControl).touched\">\n                        {{item.label}} should be at least {{addLocationFormGroup.get(item.formControl)?.errors.minlength.requiredLength}} characters\n                    </small>\n\n                    <small class=\"error-messaage\"\n                        *ngIf=\"addLocationFormGroup.get(item.formControl)?.hasError('maxlength') && addLocationFormGroup.get(item.formControl).touched\">\n                        {{item.label}} should be less than {{addLocationFormGroup.get(item.formControl)?.errors.maxlength.requiredLength}} characters\n                    </small>\n                </nb-form-field>\n\n                <nb-checkbox *ngIf=\"item.type === 'checkbox'\" [formControlName]=\"item.formControl\">\n                    {{item.label}}\n                </nb-checkbox>\n\n            </ng-container>\n\n        </form>\n    </nb-card-body>\n    <nb-card-footer>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"gappx\">\n            <button nbButton outline status=\"danger\" (click)=\"closeDialog()\">Cancel</button>\n            <button nbButton status=\"primary\" [disabled]=\"!addLocationFormGroup.valid\"\n                (click)=\"addPlaceAction()\">Save</button>\n        </div>\n    </nb-card-footer>\n</nb-card>","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { countriesColumn } from './places-columns/countries.column';\nimport { regionsColumn } from './places-columns/regions.column';\nimport { statesColumn } from './places-columns/states.column';\nimport { citiesColumn } from './places-columns/cities.column';\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { LocationService } from '../../../services/locations/location.service';\n@Component({\n  selector: 'places-grid',\n  templateUrl: './places-grid.component.html',\n  styleUrls: ['./places-grid.component.scss']\n})\nexport class PlacesGridComponent implements OnInit {\n  @Input() placesType: 'countries' | 'regions' | 'states' | 'cities';\n  @Input() dataItem: GridDataResult;\n  @Input() isLoading: boolean;\n  @Output() filterChangeEmit: EventEmitter<any> = new EventEmitter();\n  @Output() commandActionClick: EventEmitter<any> = new EventEmitter();\n  public columnGrid: any[] = [];\n  public autoCompleteData: any = {\n    name: '',\n    list: []\n  };\n  private AutoCompleteFunc: string;\n  constructor(\n    private _locationService: LocationService,\n  ) { }\n\n  ngOnInit(): void {\n    switch (this.placesType) {\n      case 'regions':\n        this.autoCompleteData.name = 'country_name_en';\n        this.AutoCompleteFunc = 'Countries';\n        break;\n\n      case 'states':\n        this.autoCompleteData.name = 'region_name_en';\n        this.AutoCompleteFunc = 'Regions';\n        break;\n\n      case 'cities':\n        this.autoCompleteData.name = 'state_name_en';\n        this.AutoCompleteFunc = 'States';\n        break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.placesType && changes.placesType.currentValue) {\n      switch (this.placesType) {\n        case 'countries':\n          this.columnGrid = countriesColumn;\n          break;\n\n        case 'regions':\n          this.columnGrid = regionsColumn;\n          break;\n\n        case 'states':\n          this.columnGrid = statesColumn;\n          break;\n\n        case 'cities':\n          this.columnGrid = citiesColumn;\n          break;\n      }\n    }\n  }\n\n  autoCompleteFilterChangeCheck(event: any) {\n    const meta: any = 'name=' + event.value;\n    this._locationService['getAll' + this.AutoCompleteFunc](meta).subscribe(\n      (res: any) => {\n        this.autoCompleteData.list = res['data'];\n      },\n      (error: any) => { },\n      () => { },\n    )\n  }\n}\n","<app-kendo-custome-grid [GridColumns]=\"columnGrid\" [gridView]=\"dataItem\" (stateChange)=\"filterChangeEmit.emit($event)\"\n    (commandActionClick)=\"commandActionClick.emit($event)\" [sortable]=\"false\" [loading]=\"isLoading\"\n    (autoCompleteFilterChange)=\"autoCompleteFilterChangeCheck($event)\" [autoCompleteData]=\"autoCompleteData\">\n</app-kendo-custome-grid>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SidebarComponent } from '../../shared/sidebar/sidebar.component';\nimport { PlacesIndexComponent } from './places-index/places-index.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SidebarComponent,\n    children: [\n      { path: 'countries', component: PlacesIndexComponent },\n      { path: 'region', component: PlacesIndexComponent },\n      { path: 'states', component: PlacesIndexComponent },\n      { path: 'cities', component: PlacesIndexComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlacesRoutingModule { }\n","import { Validators } from \"@angular/forms\";\n\nexport const regionsForms: any[] = [\n    {\n        id: 'name_ar',\n        formControl: 'name_ar',\n        label: 'Name Ar',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    {\n        id: 'name_en',\n        formControl: 'name_en',\n        label: 'Name En',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    {\n        id: 'country_id',\n        formControl: 'country_id',\n        label: 'Country',\n        type: 'auto',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n        ]\n    },\n    {\n        id: 'country',\n        formControl: 'country',\n        label: 'Country',\n        type: 'string',\n        inputType: 'text',\n        validators: [],\n        hide: true,\n    },\n    {\n        id: 'activation',\n        formControl: 'activation',\n        label: 'Activation',\n        type: 'checkbox',\n        validators: [\n            Validators.required,\n        ]\n    },\n    {\n        id: 'created_at',\n        formControl: 'created_at',\n        label: 'created_at',\n        type: 'string',\n        hide: true,\n    },\n    {\n        id: 'updated_at',\n        formControl: 'updated_at',\n        label: 'updated_at',\n        type: 'string',\n        hide: true,\n    }\n]","import {Injectable} from '@angular/core';\nimport {CompositeFilterDescriptor, FilterDescriptor, State} from '@progress/kendo-data-query';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterToQueryService {\n    queryString: string = '';\n\n    constructor() {\n    }\n\n    convertToQuery(state: State): string {\n        let fieldName = '';\n        let filter: Array<FilterDescriptor | CompositeFilterDescriptor> = state.filter?.filters ? state.filter.filters : [];\n        this.queryString = '';\n        filter.forEach((item: FilterDescriptor, i) => {\n            // if (item.field === 'name_en' || item.field === 'name_ar') {\n            //     fieldName = 'name';\n            // } else {\n            fieldName = item.field.toString();\n            // }\n            this.queryString = this.queryString + ((item.value || item.value === false) ? (fieldName + '=' + item.value + '&') : '');\n        });\n        this.queryString = this.queryString + 'limit=' + state.take + '&offset=' + state.skip;\n        return this.queryString;\n    }\n}\n","import { Validators } from \"@angular/forms\";\n\nexport const statesForms: any[] = [\n    {\n        id: 'name_ar',\n        formControl: 'name_ar',\n        label: 'Name Ar',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    {\n        id: 'name_en',\n        formControl: 'name_en',\n        label: 'Name En',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    {\n        id: 'state_id',\n        formControl: 'region_id',\n        label: 'Region',\n        type: 'auto',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n        ]\n    },\n    {\n        id: 'region',\n        formControl: 'region',\n        label: 'Region',\n        type: 'auto',\n        inputType: 'text',\n        validators: [],\n        hide: true,\n    },\n    {\n        id: 'activation',\n        formControl: 'activation',\n        label: 'Activation',\n        type: 'checkbox',\n        validators: [\n            Validators.required,\n        ]\n    },\n    {\n        id: 'created_at',\n        formControl: 'created_at',\n        label: 'created_at',\n        type: 'string',\n        hide: true,\n    },\n    {\n        id: 'updated_at',\n        formControl: 'updated_at',\n        label: 'updated_at',\n        type: 'string',\n        hide: true,\n    }\n]","import { KendoCustomeGrideModel } from \"../../../../shared/kendo-custome-grid/model/kendoCustomeGrid.model\";\n\nexport const countriesColumn: KendoCustomeGrideModel[] = [\n    {\n        dataType: 'text',\n        id: 'countries_id',\n        name: 'ID',\n        field: 'id',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    // {\n    //     dataType: 'text',\n    //     id: 'countries_iso',\n    //     name: 'ISO',\n    //     field: 'iso',\n    //     filterType: 'string',\n    //     hidden: false,\n    //     filterOperator: 'EQUAL',\n    // },\n    {\n        dataType: 'text',\n        id: 'countries_name_en',\n        name: 'Name En',\n        field: 'name_en',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'countries_name_ar',\n        name: 'Name Ar',\n        field: 'name_ar',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    // {\n    //     dataType: 'text',\n    //     id: 'countries_country_code',\n    //     name: 'Country Code',\n    //     field: 'country_code',\n    //     filterType: 'string',\n    //     hidden: false,\n    //     filterOperator: 'EQUAL',\n    // },\n    // {\n    //     dataType: 'text',\n    //     id: 'countries_phone_code',\n    //     name: 'Phone Code',\n    //     field: 'phone_code',\n    //     filterType: 'string',\n    //     hidden: false,\n    //     filterOperator: 'EQUAL',\n    // },\n    {\n        dataType: 'text',\n        id: 'countries_activation',\n        name: 'Activation',\n        field: 'activation',\n        filterType: 'boolean',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'countries_action',\n        name: 'Action',\n        field: 'action',\n        filterType: 'none',\n        hidden: false,\n        filterOperator: 'EQUAL',\n        command: [\n            {\n                action: 'edit',\n                color: 'primary',\n                icon: 'edit',\n                hidden: false,\n                id: 'edit_action',\n                toolTip: 'Edit',\n                disabled: () => { return false },\n            },\n            {\n                action: 'delete',\n                color: 'warn',\n                icon: 'delete_outline',\n                hidden: false,\n                id: 'delete_action',\n                toolTip: 'Delete',\n                disabled: () => { return false },\n            }\n        ]\n    },\n]\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NbDialogService, NbToastrService } from '@nebular/theme';\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { FilterToQueryService } from '../../../services/filter-to-query/filter-to-query.service';\nimport { LocationService } from '../../../services/locations/location.service';\nimport { PlacesDialogComponent } from '../places-dialog/places-dialog.component';\n\n@Component({\n  selector: 'app-places-index',\n  templateUrl: './places-index.component.html',\n  styleUrls: ['./places-index.component.scss']\n})\nexport class PlacesIndexComponent implements OnInit {\n  @ViewChild('dialog') dialog: TemplateRef<any>;\n  @ViewChild('deleteDialog') deleteDialog: TemplateRef<any>;\n  @ViewChild('dialogComp') dialogComp: PlacesDialogComponent;\n  public title: string = \"\";\n  public placesType: 'countries' | 'regions' | 'states' | 'cities';\n  public dataItem: GridDataResult = {\n    data: [],\n    total: 0\n  }\n  public loading: boolean = false;\n  public currentDeletePlace: any;\n  constructor(\n    private _Router: Router,\n    private _LocationService: LocationService,\n    public convertFilter: FilterToQueryService,\n    private _NbDialogService: NbDialogService,\n    private _NbToastrService: NbToastrService,\n  ) {\n\n    switch (_Router.url) {\n      case '/places/countries':\n        this.placesType = 'countries';\n        this.title = 'Countries';\n        break;\n\n      case '/places/region':\n        this.placesType = 'regions';\n        this.title = 'Regions';\n        break;\n\n      case '/places/states':\n        this.placesType = 'states';\n        this.title = 'States';\n        break;\n\n      case '/places/cities':\n        this.placesType = 'cities';\n        this.title = 'Cities';\n        break;\n    }\n\n    this.getIndexData();\n  }\n\n  ngOnInit(): void {\n  }\n\n  getIndexData(meta?: any) {\n    this.loading = true;\n    this._LocationService['getAll' + this.title](meta).subscribe(\n      (res: any) => {\n        this.dataItem.data = res.data;\n        this.dataItem.total = res.total;\n      },\n      (error: any) => {\n        this.loading = false;\n      },\n      () => {\n        this.loading = false;\n      },\n    )\n  }\n\n  openAddDialog() {\n    this._NbDialogService.open(this.dialog, {\n      context: {\n        type: 'add'\n      },\n      closeOnBackdropClick: false,\n    });\n  }\n\n  openEditDialog(data: any) {\n    this._NbDialogService.open(this.dialog, {\n      context: {\n        type: 'edit',\n        data: data\n      },\n      closeOnBackdropClick: false,\n    });\n  }\n\n  addEditPlace(data: any) {\n    this.dialogComp.dialogRef.close();\n    this.loading = true;\n    this._LocationService[data.id ? ('edit' + this.title) : ('addNew' + this.title)](data).subscribe(\n      (res: any) => {\n        this._NbToastrService.show(res['msg'], 'Success', { status: 'success' });\n      },\n      (error: any) => {\n        this._NbToastrService.show(error.error.message, 'Error', { status: 'danger' });\n        this.loading = false;\n      },\n      () => {\n        this.getIndexData();\n      },\n    )\n  }\n\n  addEditCountries(data: any) {\n\n  }\n\n\n  commandAction(event: any) {\n    if (event.action.action === 'edit') {\n      this.openEditDialog(event.data);\n    }\n\n    if (event.action.action === 'delete') {\n      this.currentDeletePlace = event.data;\n      this._NbDialogService.open(this.deleteDialog);\n    }\n  }\n\n  deletePlace(dialogRef: any) {\n    this._LocationService['delete' + this.title](this.currentDeletePlace.id).subscribe(\n      (res: any) => {\n        this._NbToastrService.show(res['msg'], 'Success', { status: 'success' });\n      },\n      (error: any) => {\n        this._NbToastrService.show(error.error.message, 'Error', { status: 'danger' });\n        this.loading = false;\n        dialogRef.close();\n      },\n      () => {\n        this.getIndexData();\n        dialogRef.close();\n      },\n    )\n  }\n\n}\n","<nb-card>\n    <nb-card-header>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"gappx\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"header-title\">\n                {{title}}\n            </div>\n            <button nbButton status=\"primary\" size=\"small\" (click)=\"openAddDialog()\">Add New {{title}}</button>\n        </div>\n    </nb-card-header>\n\n    <nb-card-body>\n        <places-grid [placesType]=\"placesType\" [title]=\"title\" [dataItem]=\"dataItem\" [isLoading]=\"loading\"\n            (filterChangeEmit)=\"getIndexData(convertFilter.convertToQuery($event))\"\n            (commandActionClick)=\"commandAction($event)\"></places-grid>\n    </nb-card-body>\n</nb-card>\n\n<ng-template #dialog let-data let-ref=\"dialogRef\">\n    <places-dialog #dialogComp [placesType]=\"placesType\" [title]=\"title\" [dialogRef]=\"ref\"\n        (addPlace)=\"addEditPlace($event)\" [data]=\"data\">\n    </places-dialog>\n</ng-template>\n\n<ng-template #deleteDialog let-data let-ref=\"dialogRef\">\n    <nb-card class=\"dialog-card\">\n        <nb-card-header>\n            Delete Confirm\n        </nb-card-header>\n        <nb-card-body>\n            <div>Are you sure to delete {{placesType}} <strong>{{currentDeletePlace.name_en}}</strong> ?</div>\n        </nb-card-body>\n        <nb-card-footer>\n            <button nbButton (click)=\"ref.close()\">Cancel</button>\n            <button nbButton status=\"danger\" (click)=\"deletePlace(ref)\" style=\"float: right;\">Yes</button>\n        </nb-card-footer>\n    </nb-card>\n</ng-template>","import { KendoCustomeGrideModel } from \"../../../../shared/kendo-custome-grid/model/kendoCustomeGrid.model\";\n\nexport const statesColumn: KendoCustomeGrideModel[] = [\n    {\n        dataType: 'text',\n        id: 'states_id',\n        name: 'ID',\n        field: 'id',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'states_name_ar',\n        name: 'Name Ar',\n        field: 'name_ar',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'states_name_en',\n        name: 'Name En',\n        field: 'name_en',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'states_activation',\n        name: 'Activation',\n        field: 'activation',\n        filterType: 'boolean',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'states_region_id',\n        name: 'Region',\n        field: 'region_name_en',\n        filterType: 'autoComplete',\n        fieldSearch: 'region',\n        autoTextField: 'name_en',\n        autoValueField: 'id',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'countries_action',\n        name: 'Action',\n        field: 'action',\n        filterType: 'none',\n        hidden: false,\n        filterOperator: 'EQUAL',\n        command: [\n            {\n                action: 'edit',\n                color: 'primary',\n                icon: 'edit',\n                hidden: false,\n                id: 'edit_action',\n                toolTip: 'Edit',\n                disabled: () => { return false },\n            },\n            {\n                action: 'delete',\n                color: 'warn',\n                icon: 'delete_outline',\n                hidden: false,\n                id: 'delete_action',\n                toolTip: 'Delete',\n                disabled: () => { return false },\n            }\n        ]\n    },\n]","import { Validators } from \"@angular/forms\";\n\nexport const contriesForms: any[] = [\n    {\n        id: 'name_ar',\n        formControl: 'name_ar',\n        label: 'Name Ar',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    {\n        id: 'name_en',\n        formControl: 'name_en',\n        label: 'Name En',\n        type: 'string',\n        inputType: 'text',\n        validators: [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(100),\n        ]\n    },\n    // {\n    //     id: 'iso',\n    //     formControl: 'iso',\n    //     label: 'ISO',\n    //     type: 'string',\n    //     inputType: 'text',\n    //     validators: [\n    //         Validators.required,\n    //         Validators.minLength(2),\n    //         Validators.maxLength(100),\n    //     ]\n    // },\n    // {\n    //     id: 'country_code',\n    //     formControl: 'country_code',\n    //     label: 'Country Code',\n    //     type: 'string',\n    //     inputType: 'number',\n    //     validators: [\n    //         Validators.required,\n    //         Validators.minLength(2),\n    //         Validators.maxLength(10),\n    //     ]\n    // },\n    // {\n    //     id: 'phone_code',\n    //     formControl: 'phone_code',\n    //     label: 'Phone Code',\n    //     type: 'string',\n    //     inputType: 'number',\n    //     validators: [\n    //         Validators.required,\n    //         Validators.minLength(2),\n    //         Validators.maxLength(100),\n    //     ]\n    // },\n    {\n        id: 'activation',\n        formControl: 'activation',\n        label: 'Activation',\n        type: 'checkbox',\n    },\n    {\n        id: 'created_at',\n        formControl: 'created_at',\n        label: 'created_at',\n        type: 'string',\n        hide: true,\n    },\n    {\n        id: 'updated_at',\n        formControl: 'updated_at',\n        label: 'updated_at',\n        type: 'string',\n        hide: true,\n    }\n]","import { KendoCustomeGrideModel } from \"../../../../shared/kendo-custome-grid/model/kendoCustomeGrid.model\";\n\nexport const citiesColumn: KendoCustomeGrideModel[] = [\n    {\n        dataType: 'text',\n        id: 'cities_id',\n        name: 'ID',\n        field: 'id',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'cities_name_ar',\n        name: 'Name Ar',\n        field: 'name_ar',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'cities_name_en',\n        name: 'Name En',\n        field: 'name_en',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'cities_activation',\n        name: 'Activation',\n        field: 'activation',\n        filterType: 'boolean',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'cities_state_id',\n        name: 'State',\n        field: 'state_name_en',\n        filterType: 'autoComplete',\n        fieldSearch: 'state',\n        autoTextField: 'name_en',\n        autoValueField: 'id',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'countries_action',\n        name: 'Action',\n        field: 'action',\n        filterType: 'none',\n        hidden: false,\n        filterOperator: 'EQUAL',\n        command: [\n            {\n                action: 'edit',\n                color: 'primary',\n                icon: 'edit',\n                hidden: false,\n                id: 'edit_action',\n                toolTip: 'Edit',\n                disabled: () => { return false },\n            },\n            {\n                action: 'delete',\n                color: 'warn',\n                icon: 'delete_outline',\n                hidden: false,\n                id: 'delete_action',\n                toolTip: 'Delete',\n                disabled: () => { return false },\n            }\n        ]\n    },\n]","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlacesRoutingModule } from './places-routing.module';\nimport { PlacesIndexComponent } from './places-index/places-index.component';\nimport { PlacesGridComponent } from './places-grid/places-grid.component';\nimport { PlacesDialogComponent } from './places-dialog/places-dialog.component';\nimport { NbAutocompleteModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbDialogModule, NbFormFieldModule, NbInputModule, NbSpinnerModule } from '@nebular/theme';\nimport { KendoCustomeGridModule } from '../../shared/kendo-custome-grid/kendoCustomeGrid.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [PlacesIndexComponent, PlacesGridComponent, PlacesDialogComponent],\n  imports: [\n    CommonModule,\n    PlacesRoutingModule,\n\n    FlexLayoutModule,\n    NbCardModule,\n    NbButtonModule,\n    KendoCustomeGridModule,\n    ReactiveFormsModule,\n    NbDialogModule.forChild(),\n    NbInputModule,\n    NbFormFieldModule,\n    NbCheckboxModule,\n    NbAutocompleteModule,\n    NbSpinnerModule,\n  ]\n})\nexport class PlacesModule { }\n"],"sourceRoot":"webpack:///"}