{"version":3,"sources":["./src/app/services/shared/shared-api-service.service.ts","./node_modules/file-saver/dist/FileSaver.min.js","./src/app/services/categories/categories.services.ts","./src/app/services/filter-to-query/filter-to-query.service.ts","./src/app/services/brands/brands.services.ts"],"names":[],"mappings":"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","file":"default~pages-brands-brands-module~pages-products-products-module.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpRequest} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedApiServiceService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    exportUrl: any;\n\n    getCities(meta?: any) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/cities/for-selection?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/cities/for-selection';\n        return this.http.get<any>(url);\n    }\n\n    exportData(targetUrl) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/' + targetUrl;\n        const opts: any = {\n            headers: new HttpHeaders({\n                'Accept': 'text/html, application/xhtml+xml, */*',\n                'Content-Type': 'text/plain; charset=utf-8'\n            }),\n            responseType: 'blob'\n        };\n        return this.http.get<string>(url, opts);\n    }\n}\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApiModel} from '../../shared/model/api.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoriseServices {\n\n    constructor(private http: HttpClient) {\n    }\n\n    public getCategoriseForAdmin(meta?: string) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/categories/get-categories-for-admin?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/categories/get-categories-for-admin';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getCategorise(meta?: string) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/categories?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/categories';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getCategoriesByLevel( level : string, meta?:string ) {\n        var url = environment.MAIN_SYSTEM + 'api/dashboard/categories?level='+level;\n        url = meta ? url+'&' + meta : url;\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getCategoriesAllWithTree() {\n        const url =  environment.MAIN_SYSTEM + 'api/dashboard/categories/get-all-main-sub-child';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public getParentCategorise(meta?: string) {\n        const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/categories/parent-and-sub?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/categories/parent-and-sub';\n        return this.http.get<ApiModel<any>>(url);\n    }\n\n    public CreateCategory(newCategory) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories';\n        return this.http.post(url, newCategory);\n    }\n\n    public getCategory(categoryId) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/' + categoryId;\n        return this.http.get(url);\n    }\n\n    public editCategory(category) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/update';\n        return this.http.post(url, category);\n    }\n\n    public deleteCategory(categoryId) {\n        const options = {\n            headers: new HttpHeaders({}),\n            body: {\n                id: categoryId\n            }\n        };\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories';\n        return this.http.delete(url, options);\n    }\n\n\n    public selectedCategories(filter) {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/list/' + filter;\n        return this.http.get(url);\n    }\n\n    public getCategoriesForSelection() {\n        const url = environment.MAIN_SYSTEM + 'api/dashboard/categories/for-selection';\n        return this.http.get(url);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CompositeFilterDescriptor, FilterDescriptor, State} from '@progress/kendo-data-query';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterToQueryService {\n    queryString: string = '';\n\n    constructor() {\n    }\n\n    convertToQuery(state: State): string {\n        let fieldName = '';\n        let filter: Array<FilterDescriptor | CompositeFilterDescriptor> = state.filter?.filters ? state.filter.filters : [];\n        this.queryString = '';\n        filter.forEach((item: FilterDescriptor, i) => {\n            // if (item.field === 'name_en' || item.field === 'name_ar') {\n            //     fieldName = 'name';\n            // } else {\n            fieldName = item.field.toString();\n            // }\n            this.queryString = this.queryString + ((item.value || item.value === false) ? (fieldName + '=' + item.value + '&') : '');\n        });\n        this.queryString = this.queryString + 'limit=' + state.take + '&offset=' + state.skip;\n        return this.queryString;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ApiModel } from '../../shared/model/api.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getBrands(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/brands?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/brands';\n    return this.http.get<ApiModel<any>>(url);\n  }\n\n  public getBrand(id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/brands/' + id;\n    return this.http.get(url);\n  }\n\n  public CreateBrand(newBrand) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/brands';\n    return this.http.post(url, newBrand);\n  }\n\n  public editBrand(brand) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/brands/update';\n    return this.http.post(url, brand);\n  }\n\n  public deleteBrand(id) {\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/brands';\n    return this.http.delete(url, options);\n  }\n}\n"],"sourceRoot":"webpack:///"}