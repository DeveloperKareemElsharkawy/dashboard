{"version":3,"sources":["./src/app/services/materials/materials.services.ts","./src/app/services/policies/policies.services.ts","./src/app/services/colors/colors.services.ts","./src/app/services/badges/badges.services.ts","./src/app/services/sellers/sellers.services.ts","./node_modules/rxjs/internal/util/isObject.js","./src/app/services/sizes/sizes.services.ts","./src/app/services/products/products.services.ts","./src/app/services/admins/admins.services.ts","./src/app/services/roles/roles.services.ts","./src/app/services/permissions/permissions.services.ts","./src/app/services/apps/apps.services.ts","./src/app/services/stores/stores.services.ts","./src/app/services/shipping-methods/shipping-methods.services.ts","./src/app/services/packing-units/PackingUnits.services.ts","./src/app/services/stock/stock.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getMaterials(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/materials?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/materials';\n    return this.http.get(url);\n  }\n\n  public CreateMaterial(newMaterial) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/materials';\n    return this.http.post(url, newMaterial);\n  }\n\n  public getMaterial(colorId) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/materials/' + colorId;\n    return this.http.get(url);\n  }\n\n  public editMaterial(color) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/materials';\n    return this.http.put(url, color);\n  }\n\n  public deleteMaterial(id: string) {\n    const url = environment.MAIN_SYSTEM + `api/dashboard/materials/${id}`;\n    return this.http.delete(url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoliciesServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getPolicies(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/policies?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/policies';\n    return this.http.get(url);\n  }\n\n  public getPolicy(Id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/policies/' + Id;\n    return this.http.get(url);\n  }\n\n  public editPolicy(object) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/policies/update';\n    return this.http.post(url, object);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getColors(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/colors?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/colors';\n    return this.http.get(url);\n  }\n\n  public CreateColor(newColor) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/colors';\n    return this.http.post(url, newColor);\n  }\n\n  public getColor(colorId) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/colors/' + colorId;\n    return this.http.get(url);\n  }\n\n  public editColor(color) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/colors';\n    return this.http.put(url, color);\n  }\n\n  public deleteColor(id: string) {\n    const url = environment.MAIN_SYSTEM + `api/dashboard/colors/${id}`;\n    return this.http.delete(url);\n  }\n\n  public getColorsForSelection(filter) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/colors/get-all/for-selection'+filter;\n    return this.http.get(url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ApiModel } from '../../shared/model/api.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BadgesServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getBadges(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/badges?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/badges';\n    return this.http.get<ApiModel<any>>(url);\n  }\n\n  public getBadgesList($meta = \"\") {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/badges/get-all/for-selection' + $meta;\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n\n  public getBadge(id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/badges/' + id;\n    return this.http.get(url);\n  }\n\n  public CreateBadge(newBadge) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/badges';\n    return this.http.post(url, newBadge);\n  }\n\n  public editBadge(badge) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/badges/update';\n    return this.http.post(url, badge);\n  }\n\n  public deleteBadge(id) {\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/badges';\n    return this.http.delete(url, options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ApiModel } from '../../shared/model/api.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SellersServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getSellers(meta?: any) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/sellers?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/sellers';\n    return this.http.get<ApiModel<any>>(url);\n  }\n\n  public deleteSeller(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sellers';\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    return this.http.delete(url, options);\n  }\n\n  public getSellerDetails(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sellers/' + id;\n    return this.http.get(url);\n  }\n\n  public updateSellerData(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sellers/update';\n    return this.http.post(url, data);\n  }\n\n  public approvePendingSeller(meta: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sellers/approve-pending-seller';\n    return this.http.put(url, meta);\n  }\n  public getForSelection(meta) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sellers/get-for-selection'+ (meta ? \"?\" + meta : '');;\n    return this.http.get(url);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SizesServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getSizes(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/sizes?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/sizes';\n    return this.http.get(url);\n  }\n\n  public getSize(id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sizes/' + id;\n    return this.http.get(url);\n  }\n\n  public createSiz(newSize) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sizes';\n    return this.http.post(url, newSize);\n  }\n\n  public editSize(brand) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sizes';\n    return this.http.put(url, brand);\n  }\n\n  public deleteSize(id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sizes/' + id;\n    return this.http.delete(url);\n  }\n\n  public getSizeTypes() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/sizes/types';\n    return this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getProducts(meta?: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products' + (meta ? \"?\" + meta : '');\n    return this.http.get(url);\n  }\n\n  public getProductInfo(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/' + id + '/info';\n    return this.http.get(url);\n  }\n\n  public getProductImageBardcode(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/' + id + '/barcode-images';\n    return this.http.get(url);\n  }\n\n  public getProductStores(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/' + id + '/store-details';\n    return this.http.get(url);\n  }\n\n  public deleteProduct(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/' + id;\n    return this.http.delete(url);\n  }\n\n  public approvePendingProduct(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/approve-pending-product';\n    const params = {\n      \"product_id\": id\n    }\n    return this.http.put(url, params);\n  }\n\n  public getProductsForSelection(meta?: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/get-products-for-selection'+ (meta ? \"?\" + meta : '');\n    return this.http.get(url, {});\n  }\n\n  public saveProductInfo(params: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/updates/info';\n    return this.http.put(url, params)\n  }\n\n  public saveStoreInfo(params: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/products/updates/store-details';\n    return this.http.put(url, params)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getAdmins(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/admins?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/admins';\n    return this.http.get(url);\n  }\n\n  public CreateAdmin(newAdmin) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/admins';\n    return this.http.post(url, newAdmin);\n  }\n\n  public getAdmin(adminId) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/admins/' + adminId;\n    return this.http.get(url);\n  }\n\n  public editAdmin(admin) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/admins/update';\n    return this.http.post(url, admin);\n  }\n\n  public deleteAdmin(id: string) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/admins';\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    return this.http.delete(url, options);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getRoles() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/roles/get-for-selection';\n    return this.http.get(url);\n  }\n\n  public getAllPermissions(){}\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {deprecate} from 'util';\nimport {Observable} from 'rxjs';\n\nexport interface IPermission {\n  name: string;\n  id: number;\n  is_enabled: boolean;\n}\n\nexport interface IRole {\n  name: string;\n  id: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getPermissions() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/permissions/get-permissions';\n    return this.http.get(url);\n  }\n\n  public getPermissionsForAdmin() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/permissions/get-permissions-for-admin';\n    return this.http.get(url);\n  }\n\n  public togglePermission(data) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/permissions/toggle-permissions';\n    return this.http.post(url, data);\n  }\n\n  public getRolesPermissions() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/permissions/get-roles-permissions';\n    return this.http.get(url);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getAppsForSelection() {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/apps/get-for-selection';\n    return this.http.get(url);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiModel } from '../../shared/model/api.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoresServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getStoresForSelection(meta?: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/get-for-selection'+ (meta ? \"?\" + meta : '');\n    return this.http.get(url);\n  }\n\n\n  public getAllStores(meta?: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores' + (meta ? (\"?\" + meta) : '');\n    return this.http.get<ApiModel<any>>(url);\n  }\n\n  public getStore(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/' + id + '/store';\n    return this.http.get<any>(url);\n  }\n\n  public getStoreCredentials(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/' + id + '/get-credentials';\n    return this.http.get<any>(url);\n  }\n\n  public deleteStore(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/' + id;\n    return this.http.delete(url);\n  }\n\n  public getStoreTypes() {\n    const url = environment.MAIN_SYSTEM + 'api/seller-app/store-types/for-selection';\n    return this.http.get<any>(url);\n  }\n\n  public updateStoreInfo(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/update';\n    return this.http.post(url, data);\n  }\n\n  public updateStoreAuth(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/update-store-auth';\n    return this.http.post(url, data);\n  }\n\n  public updateStoreDocuments(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/update_store_documents';\n    return this.http.post(url, data);\n  }\n\n  public getStorAddress(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/' + id + '/store-address';\n    return this.http.get<any>(url);\n  }\n\n  public updateStoreAddress(data: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/update-address';\n    return this.http.post(url, data);\n  }\n\n  public verifyPending(meta: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stores/approve-pending';\n    return this.http.put(url, meta);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShippingMethodsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getShippingMethods(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/shipping-methods?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/shipping-methods';\n    return this.http.get(url);\n  }\n\n  public getShippingMethod(Id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/shipping-methods/' + Id;\n    return this.http.get(url);\n  }\n\n  public editShippingMethod(object) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/shipping-methods/update';\n    return this.http.post(url, object);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ApiModel } from '../../shared/model/api.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PackingUnitsServices {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getPackingUnits(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/packing-units?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/packing-units';\n    return this.http.get<ApiModel<any>>(url);\n  }\n\n  public getPackingUnitsList($meta = \"\") {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/packing-units/get-all/for-selection' + $meta;\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n\n  public getPackingUnit(id) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/packing-units/' + id;\n    return this.http.get(url);\n  }\n\n  public CreatePackingUnit(newBadge) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/packing-units';\n    return this.http.post(url, newBadge);\n  }\n\n  public editPackingUnit(badge) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/packing-units/update';\n    return this.http.post(url, badge);\n  }\n\n  public deletePackingUnit(id) {\n    const options = {\n      headers: new HttpHeaders({\n      }),\n      body: {\n        id: id\n      }\n    }\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/packing-units';\n    return this.http.delete(url, options);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { ApiModel } from '../../shared/model/api.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  constructor(private http: HttpClient) { }\n\n\n  public getStocksList(meta?: string) {\n    const url = meta ? environment.MAIN_SYSTEM + 'api/dashboard/stock?' + meta : environment.MAIN_SYSTEM + 'api/dashboard/stock';\n    return this.http.get<ApiModel<any>>(url);\n  }\n\n\n  getStocks(productId: any, storeId: any) {\n    const url: string = environment.MAIN_SYSTEM + 'api/dashboard/products/' + productId + '/' + storeId + '/stock';\n    return this.http.get(url)\n  }\n\n  public approvePendingStock(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stock/approve-pending';\n    const params = {\n      \"id\": id\n    }\n    return this.http.put(url, params);\n  }\n\n  public editStock(params) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stock/edit-stock';\n    return this.http.post(url, params);\n  }\n\n\n  public rejectPendingStock(id: any) {\n    const url = environment.MAIN_SYSTEM + 'api/dashboard/stock/reject-pending';\n    const params = {\n      \"id\": id\n    }\n    return this.http.put(url, params);\n  }\n}\n"],"sourceRoot":"webpack:///"}