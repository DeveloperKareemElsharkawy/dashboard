{"version":3,"sources":["./src/app/pages/brands/brands-routing.module.ts","./src/app/pages/brands/brands.module.ts","./src/app/pages/brands/edit-brand/edit-brand.component.ts","./src/app/pages/brands/edit-brand/edit-brand.component.html","./src/app/pages/brands/create-brand/create-brand.component.ts","./src/app/pages/brands/create-brand/create-brand.component.html","./src/app/pages/brands/index-brands/brands.column.ts","./src/app/pages/brands/index-brands/brands.component.ts","./src/app/pages/brands/index-brands/brands.component.html"],"names":[],"mappings":"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","file":"pages-brands-brands-module.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SidebarComponent } from '../../shared/sidebar/sidebar.component';\nimport { CreateBrandComponent } from './create-brand/create-brand.component';\nimport { BrandsComponent } from './index-brands/brands.component';\nimport { EditBrandComponent } from './edit-brand/edit-brand.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: SidebarComponent,\n  children: [\n    { path: '', component: BrandsComponent },\n    { path: 'create-brand', component: EditBrandComponent },\n    { path: 'edit-brand/:id', component: EditBrandComponent },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BrandsRoutingModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NbMenuModule } from '@nebular/theme';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { BrandsRoutingModule } from './brands-routing.module';\nimport { BrandsComponent } from './index-brands/brands.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CreateBrandComponent } from './create-brand/create-brand.component';\nimport { EditBrandComponent } from './edit-brand/edit-brand.component';\nimport { NbButtonModule } from '@nebular/theme';\nimport { KendoCustomeGridModule } from '../../shared/kendo-custome-grid/kendoCustomeGrid.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport { UploadImageModule } from '../../shared/upload-image/upload-image.module';\n\n@NgModule({\n  imports: [\n    BrandsRoutingModule,\n    ReactiveFormsModule,\n    ThemeModule,\n    NbMenuModule,\n    CommonModule,\n    SharedModule,\n\n    KendoCustomeGridModule,\n    DropDownsModule,\n    NbButtonModule,\n    UploadImageModule,\n  ],\n  declarations: [\n    BrandsComponent,\n    CreateBrandComponent,\n    EditBrandComponent,\n  ],\n})\nexport class BrandsModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BrandsServices } from '../../../services/brands/brands.services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbToastrService } from '@nebular/theme';\nimport { CategoriseServices } from '../../../services/categories/categories.services';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-edit-brand',\n  templateUrl: 'edit-brand.component.html',\n  styleUrls: ['edit-brand.component.scss'],\n})\nexport class EditBrandComponent implements OnInit {\n  public dropzoneConfig: any = {\n    paramName: 'file', // The name that will be used to transfer the file\n    maxFilesize: 2, // MB\n    autoQueue: false,\n    url: '/',\n    autoProcessQueue: false,\n    multi: false\n  };\n  label: string;\n  brandFormGroup: FormGroup;\n  categoriseList: any[] = [];\n  autoLoad: boolean = false;\n  brandId: string;\n  selectedImage: File;\n  isLoading = false;\n  timeout: any;\n\n  constructor(\n    private brandsService: BrandsServices,\n    private activeRouter: ActivatedRoute,\n    private toaster: NbToastrService,\n    private categoryService: CategoriseServices,\n    private route: Router) {\n    this.brandFormGroup = new FormGroup({\n      id: new FormControl(''),\n      name_en: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]),\n      name_ar: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]),\n      category_brand: new FormControl('', Validators.required),\n      activation: new FormControl(''),\n      created_at: new FormControl(),\n      updated_at: new FormControl(),\n      // reviewed: new FormControl(''),\n      image: new FormControl(),\n    })\n  }\n\n  ngOnInit() {\n    this.brandId = this.activeRouter.snapshot.params.id;\n    if (this.brandId) {\n      this.label = 'Edit';\n      this.getBrand();\n    } else {\n      this.label = 'Add'\n    }\n  }\n\n  get bf() { return this.brandFormGroup.controls; }\n\n  getBrand() {\n    this.isLoading = true;\n    this.brandsService.getBrand(this.brandId).subscribe(\n      res => {\n        this.brandFormGroup.setValue(res['data']);\n      },\n      error => {\n        this.isLoading = false;\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  updateBrand() {\n    if (this.brandFormGroup.valid) {\n      this.isLoading = true;\n      const uploadData = new FormData();\n      const formsVlaue = this.brandFormGroup.value;\n\n      uploadData.append('id', formsVlaue.id);\n      formsVlaue.name_en ? uploadData.append('name_en', formsVlaue.name_en) : false;\n      formsVlaue.name_ar ? uploadData.append('name_ar', formsVlaue.name_ar) : false;\n      uploadData.append('activation', formsVlaue.activation ? formsVlaue.activation : false);\n      // uploadData.append('reviewed', formsVlaue.reviewed ? formsVlaue.reviewed : false);\n      formsVlaue.category_brand ? uploadData.append('category_brand', JSON.stringify(formsVlaue.category_brand.map((ele: any) => ele.id))) : false;\n\n      if (this.selectedImage) {\n        uploadData.append('image', this.selectedImage, this.selectedImage.name);\n      }\n\n      this.brandsService[this.brandId ? 'editBrand' : 'CreateBrand'](uploadData).subscribe(\n        res => {\n          this.toaster.show(res['msg'], 'Success', { status: 'success' });\n          this.route.navigateByUrl('/brands');\n        }, err => {\n          this.isLoading = false;\n          this.toaster.show(err.error.message, 'Error', { status: 'danger' });\n        },\n        () => {\n          this.isLoading = false;\n        });\n\n    } else {\n      this.toaster.show(status['message'], 'Error', { status: 'danger' });\n    }\n  }\n\n  getCategories(meta: string) {\n    this.categoryService.getCategorise(meta).subscribe(\n      res => {\n        this.categoriseList = res['data'];\n      },\n      error => {\n        this.autoLoad = false;\n      },\n      () => {\n        this.removeSelected();\n        this.autoLoad = false;\n      }\n    );\n  }\n\n  removeSelected() {\n    if (this.bf['category_brand'].value?.length > 0) {\n      this.categoriseList = this.categoriseList.filter(({ id: id1 }) => !this.bf['category_brand'].value?.some(({ id: id2 }) => id2 == id1))\n    }\n  }\n\n  onBrandImageChange(event: any) {\n    this.selectedImage = event;\n  }\n\n  filterChange(value: string) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.autoLoad = true;\n      const meta = value ? \"name_en=\" + value : '';\n      this.getCategories(meta);\n    }, 500);\n\n  }\n\n  backToBrands() {\n    this.route.navigate(['brands'])\n  }\n\n  clearImage() {\n\n  }\n}","<nb-card [nbSpinner]=\"isLoading\">\n  <nb-card-header>{{label}} Brand</nb-card-header>\n  <nb-card-body class=\"form-group\">\n\n    <form [formGroup]=\"brandFormGroup\">\n      <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"gappx\" class=\"first-row\">\n\n        <div class=\"form-control-container\" [fxFlex]=\"100/3\">\n          <nb-form-field class=\"field-with-validation\">\n            <label for=\"brand_name\">Brand Name En*</label>\n            <input nbInput type=\"text\" id=\"brand_name\" fullWidth formControlName=\"name_en\" required>\n            <small *ngIf=\"bf.name_en.touched && bf.name_en.errors?.required\">brand name field is required</small>\n            <small *ngIf=\"bf.name_en.errors?.minlength\">brand name length must be at least 2 characters</small>\n            <small *ngIf=\"bf.name_en.errors?.maxlength\">brand name length must be max 255 characters</small>\n          </nb-form-field>\n        </div>\n\n        <div class=\"form-control-container\" [fxFlex]=\"100/3\">\n          <nb-form-field class=\"field-with-validation\">\n            <label for=\"brand_name\">Brand Name Ar*</label>\n            <input nbInput type=\"text\" id=\"brand_name_ar\" fullWidth formControlName=\"name_ar\" required>\n            <small *ngIf=\"bf.name_ar.touched && bf.name_ar.errors?.required\">brand name field is required</small>\n            <small *ngIf=\"bf.name_ar.errors?.minlength\">brand name length must be at least 2 characters</small>\n            <small *ngIf=\"bf.name_ar.errors?.maxlength\">brand name length must be max 255 characters</small>\n          </nb-form-field>\n        </div>\n\n        <div class=\"form-control-container\" [fxFlex]=\"100/3\">\n          <label>Category *</label>\n          <kendo-multiselect [data]=\"categoriseList\" [filterable]=\"true\" formControlName=\"category_brand\"\n            textField=\"name_en\" valueField=\"id\" (filterChange)=\"filterChange($event)\" placeholder=\"Select Category\"\n            [loading]=\"autoLoad\" (open)=\"removeSelected()\">\n          </kendo-multiselect>\n        </div>\n\n        <div class=\"form-control-container checkbox-container\" [fxFlex]=\"100/3\">\n          <nb-checkbox formControlName=\"activation\">Activation</nb-checkbox>\n        </div>\n\n        <!-- <div class=\"form-control-container checkbox-container\" [fxFlex]=\"100/3\">\n          <nb-checkbox formControlName=\"reviewed\">Reviewed</nb-checkbox>\n        </div> -->\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutAlign=\"end start\" fxLayoutGap=\"gappx\" class=\"second-row\" [fxFlex]=\"100/4\">\n        <div class=\"form-control-container full-width\">\n          <upload-image (imageDeleted)=\"clearImage()\" (fileSelected)=\"onBrandImageChange($event)\"\n            [image]=\"brandFormGroup.value.image\"></upload-image>\n        </div>\n      </div>\n\n    </form>\n  </nb-card-body>\n  <nb-card-footer>\n    <button nbButton status=\"danger\" (click)=\"backToBrands()\">Cancel</button>\n    <button nbButton status=\"primary\" (click)=\"updateBrand()\" [disabled]=\"!brandFormGroup.valid\"\n      style=\"float: right;\">Save</button>\n  </nb-card-footer>\n</nb-card>","import {Component, OnInit} from '@angular/core';\nimport {BrandsServices} from '../../../services/brands/brands.services';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RolesServices} from '../../../services/roles/roles.services';\nimport {NbToastrService} from '@nebular/theme';\nimport {CategoriseServices} from '../../../services/categories/categories.services';\n\n\n@Component({\n  selector: 'app-create-admin',\n  templateUrl: 'create-brand.component.html',\n  styleUrls: ['create-brand.component.scss'],\n})\nexport class CreateBrandComponent implements OnInit {\n  public dropzoneConfig = {\n    paramName: 'file', // The name that will be used to transfer the file\n    maxFilesize: 2, // MB\n    autoQueue: false,\n    url: '/',\n    addRemoveLinks: true,\n    autoProcessQueue: false,\n    multi: false\n  };\n  newBrand;\n  isLoading = false;\n  categories;\n  selectedCategories = [];\n  selectedImage: File;\n\n  constructor(private brandsService: BrandsServices,\n              private activeRouter: ActivatedRoute,\n              private roleService: RolesServices,\n              private toaster: NbToastrService,\n              private categoryService: CategoriseServices,\n              private route: Router) {\n  }\n\n  ngOnInit() {\n    this.newBrand = {\n      name: '',\n      activation: false,\n      categories: []\n    };\n    this.getCategories();\n  }\n\n  createBrand() {\n    this.toggleButton();\n    const status = this.validateCreateAdmin();\n    if (status['status']) {\n      const uploadData = new FormData();\n      uploadData.append('image', this.selectedImage, this.selectedImage.name);\n      for (const key in this.newBrand) {\n        if (this.newBrand.hasOwnProperty(key)) {\n          uploadData.append(key, this.newBrand[key]);\n        }\n      }\n      this.brandsService.CreateBrand(uploadData).subscribe(res => {\n        this.toggleButton();\n        this.toaster.show(res['msg'], 'Success', {status: 'success'});\n        this.route.navigateByUrl('/brands');\n      }, err => {\n        this.toggleButton();\n        this.toaster.show(err.error.message, 'Error', {status: 'danger'});\n      });\n\n    } else {\n      this.toggleButton();\n      this.toaster.show(status['message'], 'Error', {status: 'danger'});\n    }\n  }\n\n  validateCreateAdmin() {\n    const state = {\n      status: true,\n      message: ''\n    };\n\n    if (this.newBrand.name === '') {\n      state['status'] = false;\n      state['message'] = 'Please, Enter Name';\n    }\n    return state;\n  }\n\n  toggleButton() {\n    this.isLoading = !this.isLoading;\n  }\n\n  getCategories() {\n    this.categoryService.selectedCategories('parents').subscribe(res => {\n      this.categories = res['data'];\n    }, error => {\n    });\n  }\n\n  categoryChange(event) {\n    this.selectedCategories = [];\n    event.value.forEach(element => {\n      this.selectedCategories.push(element.id);\n    });\n    this.newBrand.categories = this.selectedCategories;\n  }\n\n  onBrandImageChange(event) {\n    this.selectedImage = event;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <nb-card>\n      <nb-card-header>Create Brand</nb-card-header>\n      <nb-card-body class=\"form-group\">\n\n        <div class=\"row\">\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <label>Brand Name</label>\n              <input type=\"text\" class=\"form-control\" placeholder=\"Name\" [(ngModel)]=\"newBrand.name\">\n            </div>\n          </div>\n\n          <!-- <div class=\"col\">\n            <label>Categories</label>\n            <ngx-select-dropdown\n              (change)=\"categoryChange($event)\"\n              [multiple]=\"true\"\n              [options]=\"categories\"\n              [config]=\"{search: true, displayKey: 'name_en'}\">\n            </ngx-select-dropdown>\n          </div> -->\n\n        </div>\n        <!-- <dropzone [config]=\"dropzoneConfig\" [message]=\"'Click or drag images here to upload'\"\n                  (thumbnail)=\"onBrandImageChange($event[0])\"></dropzone> -->\n        <div class=\"row\">\n          <div class=\"col\">\n            <nb-checkbox [(ngModel)]=\"newBrand.activation\">Activation</nb-checkbox>\n          </div>\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" (click)=\"createBrand()\" [disabled]=\"isLoading\">Save</button>\n          </div>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n\n</div>","import { KendoCustomeGrideModel } from '../../../shared/kendo-custome-grid/model/kendoCustomeGrid.model';\n\nexport const brandsColumn: KendoCustomeGrideModel[] = [\n    {\n        dataType: 'text',\n        id: 'id',\n        name: 'ID',\n        field: 'id',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'name',\n        name: 'Name',\n        field: 'name_en',\n        filterType: 'string',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'chips',\n        chipTypeName: 'name_en',\n        id: 'name',\n        name: 'Category',\n        field: 'category_brand',\n        fieldSearch: 'category',\n        filterType: 'autoComplete',\n        autoTextField: 'name_en',\n        autoValueField: 'id',\n        hidden: false,\n        filterOperator: 'EQUAL',\n        width: 300,\n        placeholder: 'Search Category'\n    },\n    {\n        dataType: 'text',\n        id: 'name',\n        name: 'Activation',\n        field: 'activation',\n        filterType: 'boolean',\n        hidden: false,\n        filterOperator: 'EQUAL',\n    },\n    {\n        dataType: 'text',\n        id: 'command',\n        name: 'Action',\n        field: 'command',\n        filterType: 'none',\n        hidden: false,\n        filterOperator: 'EQUAL',\n        command: [\n            {\n                action: 'edit',\n                color: 'primary',\n                id: 'edit-action',\n                hidden: false,\n                toolTip: 'Edit',\n                icon: 'edit',\n                buttonType: 'icon',\n                disabled: () => false,\n            },\n            {\n                action: 'delete',\n                color: 'warn',\n                id: 'delete-action',\n                hidden: false,\n                toolTip: 'Delete',\n                icon: 'delete',\n                buttonType: 'icon',\n                disabled: () => false,\n            }\n        ]\n    },\n];","import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {BrandsServices} from '../../../services/brands/brands.services';\nimport {Router} from '@angular/router';\nimport {CategoriseServices} from '../../../services/categories/categories.services';\nimport {NbDialogService, NbToastrService} from '@nebular/theme';\nimport {brandsColumn} from './brands.column';\nimport {GridDataResult} from '@progress/kendo-angular-grid';\nimport {FilterToQueryService} from '../../../services/filter-to-query/filter-to-query.service';\nimport {State} from '@progress/kendo-data-query';\nimport {saveAs} from 'file-saver';\nimport {SharedApiServiceService} from '../../../services/shared/shared-api-service.service';\n\n@Component({\n    selector: 'app-admin',\n    templateUrl: 'brands.component.html',\n    styleUrls: ['brands.component.scss'],\n})\nexport class BrandsComponent implements OnInit {\n    @ViewChild('dialog') dialog: any;\n    columnGrid: any = brandsColumn;\n    dataItem: GridDataResult = {\n        data: [],\n        total: 0,\n    };\n    lastMeta: string;\n    loading: boolean;\n    autoCompleteData: any = {\n        name: 'category_brand',\n        list: []\n    };\n    currentDeleteBrand: any;\n\n\n    constructor(private brandService: BrandsServices,\n                private toaster: NbToastrService,\n                private categoryService: CategoriseServices,\n                private convertFilter: FilterToQueryService,\n                private router: Router,\n                private dialogService: NbDialogService,\n                private sharedService: SharedApiServiceService\n    ) {\n    }\n\n    ngOnInit() {\n        this.getBrands();\n    }\n\n    getBrands(meta?: string) {\n        this.loading = true;\n        this.lastMeta = meta;\n        this.brandService.getBrands(meta).subscribe(\n            res => {\n                this.dataItem.data = res['data'];\n                this.dataItem.total = res.total;\n            },\n            error => {\n                this.loading = false;\n            },\n            () => {\n                this.loading = false;\n            }\n        );\n    }\n\n    getCategories(meta: string) {\n        this.categoryService.getParentCategorise(meta).subscribe(res => {\n            this.autoCompleteData.list = res['data'];\n        }, error => {\n        });\n    }\n\n    deleteBrand(dialogRef: any) {\n        this.brandService.deleteBrand(this.currentDeleteBrand.id).subscribe(\n            res => {\n                this.toaster.show(res['msg'], 'Success', {status: 'success'});\n            },\n            error => {\n                this.toaster.show(error.error.message, 'Error', {status: 'danger'});\n                dialogRef.close();\n            },\n            () => {\n                dialogRef.close();\n                this.getBrands(this.lastMeta);\n                this.currentDeleteBrand = null;\n            },\n        );\n    }\n\n    commandActionClick(event: any) {\n        switch (event.action.action) {\n            case 'edit':\n                this.router.navigate(['./brands/edit-brand/' + event.data.id]);\n                break;\n\n            case 'delete':\n                this.currentDeleteBrand = event.data;\n                this.open(this.dialog);\n                break;\n        }\n    }\n\n    open(dialog: TemplateRef<any>) {\n        this.dialogService.open(dialog);\n    }\n\n    filterChange(event: State) {\n        this.getBrands(this.convertFilter.convertToQuery(event));\n    }\n\n    autoCompleteFilterChangeCheck(event: any) {\n        const meta = 'name=' + event.value;\n        this.getCategories(meta);\n    }\n\n    export() {\n        this.sharedService.exportUrl = this.lastMeta ? 'brands/export/excel?' + this.lastMeta : 'brands/export/excel';\n        this.sharedService.exportData(this.sharedService.exportUrl).subscribe(data => {\n            saveAs(data, 'brands.xlsx');\n        }),\n            error =>  this.toaster.show('Error downloading the file.', 'Error', {status: 'danger'});\n    }\n}\n","<nb-card>\n    <nb-card-header>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"gappx\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"header-title\">\n                Brands\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                <button nbButton class=\"mr-2\" (click)=\"export()\" status=\"danger\" size=\"small\" *ngIf=\"dataItem.data.length > 0\" >Export</button>\n                <button nbButton routerLink=\"/brands/create-brand\" status=\"primary\" size=\"small\">Add New Brand</button>\n            </div>\n        </div>\n    </nb-card-header>\n\n    <nb-card-body>\n        <app-kendo-custome-grid [GridColumns]=\"columnGrid\" [gridView]=\"dataItem\" (stateChange)=\"filterChange($event)\"\n                                (autoCompleteFilterChange)=\"autoCompleteFilterChangeCheck($event)\"\n                                [autoCompleteData]=\"autoCompleteData\"\n                                [loading]=\"loading\" (commandActionClick)=\"commandActionClick($event)\" [sortable]=\"false\"\n                                [filterable]=\"true\">\n        </app-kendo-custome-grid>\n    </nb-card-body>\n</nb-card>\n\n<ng-template #dialog let-data let-ref=\"dialogRef\">\n    <nb-card class=\"dialog-card\">\n        <nb-card-header>\n            Delete Confirm\n        </nb-card-header>\n        <nb-card-body>\n            <div>Are you sure to delete brand <strong>{{currentDeleteBrand.name}}</strong> ?</div>\n        </nb-card-body>\n        <nb-card-footer>\n            <button nbButton (click)=\"ref.close()\">Cancel</button>\n            <button nbButton status=\"danger\" (click)=\"deleteBrand(ref)\" style=\"float: right;\">Yes</button>\n        </nb-card-footer>\n    </nb-card>\n</ng-template>\n"],"sourceRoot":"webpack:///"}